@page "/CustomLeaderboard/{Spawnset}"
@inject ApplicationDbContext DbContext

@if (_isLoading)
{
	<EmptyState />
}
else
{
	<CustomLeaderboardTable CustomEntries="_customEntries" Leaderboard="_customLeaderboard" />
}

@code {
	private List<Core.Entities.CustomEntry> _customEntries = new List<Core.Entities.CustomEntry>();
	private Core.Entities.CustomLeaderboard _customLeaderboard = new Core.Entities.CustomLeaderboard();

	[Parameter]
	public string? Spawnset { get; set; }

	private bool _isLoading;

	protected override async Task OnInitializedAsync()
	{
		_isLoading = true;
		_customLeaderboard = await DbContext.CustomLeaderboards
			.AsNoTracking()
			.Include(cl => cl.SpawnsetFile)
			.FirstOrDefaultAsync(cl => cl.SpawnsetFile.Name == Spawnset);

		if (string.IsNullOrEmpty(Spawnset) || _customLeaderboard == null)
			return;

		_customEntries = await DbContext.CustomEntries
			.AsNoTracking()
			.Include(ce => ce.CustomLeaderboard)
				.ThenInclude(cl => cl.SpawnsetFile)
			.Include(ce => ce.Player)
			.Where(ce => ce.CustomLeaderboard.Id == _customLeaderboard.Id)
			.OrderByMember(nameof(Core.Entities.CustomEntry.Time), _customLeaderboard.IsAscending())
			.ToListAsync();
		_isLoading = false;
	}
}