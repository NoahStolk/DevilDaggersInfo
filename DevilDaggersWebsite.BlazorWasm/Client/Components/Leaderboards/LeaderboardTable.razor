@using DevilDaggersCore.Game
@using DevilDaggersWebsite.BlazorWasm.Shared.Dto.Leaderboards
@using DevilDaggersWebsite.BlazorWasm.Shared.Dto.Players

<div class="grid grid-cols-13">
	<div class="text-right" sort="rank">#</div>
	<div sort="flag">
		<Tooltip Text="Nationality (flag)"><img src="~/images/Icons/flag.png" /></Tooltip>
	</div>
	<div class="text-left" sort="username">Username</div>
	<div class="text-right" sort="time">Time</div>
	<div class="text-right invisible sm:visible" sort="kills">Kills</div>
	<div class="text-right invisible sm:visible" sort="Gems">Gems</div>
	<div class="text-right invisible sm:visible" sort="accuracy">Accuracy</div>
	<div class="text-left invisible lg:visible" sort="death-type">Death type</div>
	<div class="text-right invisible lg:visible" sort="total-time">Total time</div>
	<div class="text-right invisible lg:visible" sort="total-kills">Total kills</div>
	<div class="text-right invisible lg:visible" sort="total-Gems">Total Gems</div>
	<div class="text-right invisible lg:visible" sort="total-accuracy">Total accuracy</div>
	<div class="text-right invisible lg:visible" sort="total-deaths">Total deaths</div>
</div>
@foreach (GetEntryPublic entry in Leaderboard.Entries)
{
	GetPlayerForLeaderboard? player = Players?.Find(p => p.Id == entry.Id);

	bool isBanned = player?.BanDescription != null;

	Dagger dagger = GameInfo.GetDaggerFromSeconds(_gameVersion, entry.Time);
	string daggerCssClass = dagger.Name.ToLower();

	Death? death = GameInfo.GetDeathByType(_gameVersion, (int)entry.DeathType);
	string deathStyle = isBanned ? string.Empty : $"color: #{death?.ColorCode ?? "444"};";
	string deathName = death?.Name ?? "Unknown";

	double accuracy = entry.DaggersFired == 0 ? 0 : entry.DaggersHit / (double)entry.DaggersFired;
	double accuracyTotal = entry.DaggersFiredTotal == 0 ? 0 : entry.DaggersHitTotal / (double)entry.DaggersFiredTotal;

	string daggers = FormatUtils.FormatDaggersInt32(entry.DaggersHit, entry.DaggersFired, IsHistory);
	string daggersTotal = FormatUtils.FormatDaggersUInt64(entry.DaggersHitTotal, entry.DaggersFiredTotal, IsHistory);

	<div class="grid grid-cols-13 @(isBanned ? "text-colorban" : string.Empty)">
		<EntryRank PlayerId="@entry.Id" Rank="@entry.Rank" />
		<EntryFlag CountryCode="@player?.CountryCode" />
		<EntryUsername DaggerCssClass="@daggerCssClass" Id="entry.Id" Name="@entry.Username" BanDescription="@player?.BanDescription" IsBanned="player?.IsBanned ?? false" IsPublicDonator="player?.IsPublicDonator ?? false" Titles="player?.Titles" />
		<div class="text-right @daggerCssClass">@entry.Time</div>
		<div class="text-right invisible sm:visible">@entry.Kills</div>
		<div class="text-right invisible sm:visible">@entry.Gems</div>
		<div class="text-right invisible sm:visible">
			<Tooltip Text="@daggers">@accuracy.ToString(FormatUtils.AccuracyFormat)</Tooltip>
		</div>
		<div class="text-left invisible lg:visible" style="@deathStyle">@deathName</div>
		<div class="text-right invisible lg:visible">@entry.TimeTotal</div>
		<div class="text-right invisible lg:visible">@entry.KillsTotal</div>
		<div class="text-right invisible lg:visible">@entry.GemsTotal</div>
		<div class="text-right invisible lg:visible">
			<Tooltip Text="@daggersTotal">@accuracyTotal.ToString(FormatUtils.AccuracyFormat)</Tooltip>
		</div>
		<div class="hidden-xs hidden-sm hidden-md text-right">@entry.DeathsTotal</div>
	</div>
}

@code
{
	[Parameter] public bool IsHistory { get; set; }
	[Parameter] public GetLeaderboardPublic Leaderboard { get; set; } = null!;
	[Parameter] public List<GetPlayerForLeaderboard>? Players { get; set; } = null!;

	private GameVersion _gameVersion;

	protected override void OnInitialized()
	{
		_gameVersion = GameInfo.GetGameVersionFromDate(Leaderboard.DateTime) ?? GameVersion.V1;
	}
}
