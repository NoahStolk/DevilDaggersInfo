@using DevilDaggersCore.Game
@using DevilDaggersWebsite.BlazorWasm.Shared.Dto.Leaderboards
@using DevilDaggersWebsite.BlazorWasm.Shared.Dto.Players

<div class="text-xl font-goethe">
	<div class="grid gap-3 grid-cols-4 sm:grid-cols-7 lg:grid-cols-13">
		<div class="text-right" sort="rank">#</div>
		<div class="text-left" sort="flag">Flag</div>
		<div class="text-left" sort="username">Username</div>
		<div class="text-right" sort="time">Time</div>
		<div class="text-right hidden sm:block" sort="kills">Kills</div>
		<div class="text-right hidden sm:block" sort="Gems">Gems</div>
		<div class="text-right hidden sm:block" sort="accuracy">Accuracy</div>
		<div class="text-left hidden lg:block" sort="death-type">Death type</div>
		<div class="text-right hidden lg:block" sort="total-time">Total time</div>
		<div class="text-right hidden lg:block" sort="total-kills">Total kills</div>
		<div class="text-right hidden lg:block" sort="total-Gems">Total Gems</div>
		<div class="text-right hidden lg:block" sort="total-accuracy">Total accuracy</div>
		<div class="text-right hidden lg:block" sort="total-deaths">Total deaths</div>
	</div>
	<div>
		@{
			int i = 0;

			foreach (GetEntryPublic entry in Leaderboard.Entries)
			{
				GetPlayerForLeaderboardPublic? player = Players?.Find(p => p.Id == entry.Id);
				bool isBanned = player?.BanDescription != null;

				Dagger dagger = GameInfo.GetDaggerFromSeconds(_gameVersion, entry.Time);
				string daggerCssClass = dagger.Name.ToLower();

				Death? death = GameInfo.GetDeathByType(_gameVersion, (int)entry.DeathType);
				string deathStyle = isBanned ? string.Empty : $"color: #{death?.ColorCode ?? "444"};";
				string deathName = death?.Name ?? "Unknown";

				double accuracy = entry.DaggersFired == 0 ? 0 : entry.DaggersHit / (double)entry.DaggersFired;
				double accuracyTotal = entry.DaggersFiredTotal == 0 ? 0 : entry.DaggersHitTotal / (double)entry.DaggersFiredTotal;

				string daggers = FormatUtils.FormatDaggersInt32(entry.DaggersHit, entry.DaggersFired, IsHistory);
				string daggersTotal = FormatUtils.FormatDaggersUInt64(entry.DaggersHitTotal, entry.DaggersFiredTotal, IsHistory);

				<div class="grid gap-3 grid-cols-4 sm:grid-cols-7 lg:grid-cols-13 h-6 @(i % 2 == 0 ? "bg-gray11" : string.Empty) @(isBanned ? "text-colorban" : string.Empty)">
					<EntryRank PlayerId="@entry.Id" Rank="@entry.Rank" />
					<EntryFlag CountryCode="@player?.CountryCode" />
					<EntryUsername DaggerCssClass="@daggerCssClass" Id="entry.Id" Name="@entry.Username" BanDescription="@player?.BanDescription" IsBanned="player?.IsBanned ?? false" IsPublicDonator="player?.IsPublicDonator ?? false" Titles="player?.Titles" />
					<div class="text-right @daggerCssClass">@entry.Time.ToString(FormatUtils.TimeFormat)</div>
					<div class="text-right hidden sm:block">@entry.Kills.ToString(FormatUtils.LeaderboardIntFormat)</div>
					<div class="text-right hidden sm:block">@entry.Gems.ToString(FormatUtils.LeaderboardIntFormat)</div>
					<div class="text-right hidden sm:block">
						<Tooltip Text="@daggers">@accuracy.ToString(FormatUtils.AccuracyFormat)</Tooltip>
					</div>
					<div class="text-left hidden lg:block" style="@deathStyle">@deathName</div>
					<div class="text-right hidden lg:block">@entry.TimeTotal.ToString(FormatUtils.LeaderboardGlobalTimeFormat)</div>
					<div class="text-right hidden lg:block">@entry.KillsTotal.ToString(FormatUtils.LeaderboardIntFormat)</div>
					<div class="text-right hidden lg:block">@entry.GemsTotal.ToString(FormatUtils.LeaderboardIntFormat)</div>
					<div class="text-right hidden lg:block">
						<Tooltip Text="@daggersTotal">@accuracyTotal.ToString(FormatUtils.AccuracyFormat)</Tooltip>
					</div>
					<div class="text-right hidden lg:block">@entry.DeathsTotal.ToString(FormatUtils.LeaderboardIntFormat)</div>
				</div>

				i++;
			}
		}
	</div>
</div>

@code
{
	[Parameter] public bool IsHistory { get; set; }
	[Parameter] public GetLeaderboardPublic Leaderboard { get; set; } = null!;
	[Parameter] public List<GetPlayerForLeaderboardPublic>? Players { get; set; } = null!;

	private GameVersion _gameVersion;

	protected override void OnInitialized()
	{
		_gameVersion = GameInfo.GetGameVersionFromDate(Leaderboard.DateTime) ?? GameVersion.V1;
	}
}
