<Dropdown TItem="int" OnSelected="Add" @ref="_dropdown">
	<InitialTip>
		<span class="pl-2">@SelectedDisplayValue</span>
	</InitialTip>
	<ChildContent>
		<div class="bg-gray-900">
			<div class="p-2 w-64">
				<span class="cursor-default w-16">Search:</span>
				<InputTextImmediate @bind-Value="_searchValue" class="w-48 bg-gray-700 text-color-text" />
			</div>
			<ul class="max-h-screen-half overflow-y-scroll w-64">
				@{
					int i = 0;
					foreach (KeyValuePair<int, string> kvp in FilteredItems)
					{
						<li class="cursor-pointer pl-2 @(i++ % 2 == 0 ? "bg-gray-800" : string.Empty)" Item="@kvp" @onclick="e => _dropdown?.HandleSelect(kvp.Key) ?? Task.CompletedTask">@kvp.Key (@kvp.Value)</li>
					}
				}
			</ul>
		</div>
	</ChildContent>
</Dropdown>

@code
{
	private string? _searchValue;

	private Dropdown<int>? _dropdown;

	private string SelectedDisplayValue => SelectedValues == null || SelectedValues.Count == 0 ? "<None selected>" : string.Join(", ", SelectedValues.Select(i => $"{(Values?.ContainsKey(i) == true ? Values[i] : "???")} ({i})"));

	[Parameter] public Dictionary<int, string>? Values { get; set; }

	[Parameter] public List<int>? SelectedValues { get; set; }

	public Dictionary<int, string> FilteredItems => Values == null ? new() : _searchValue == null ? Values : Values
		.Where(kvp =>
			kvp.Key.ToString()?.Contains(_searchValue, StringComparison.InvariantCultureIgnoreCase) == true ||
			kvp.Value.Contains(_searchValue, StringComparison.InvariantCultureIgnoreCase))
		.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);

	private void Add(int i)
	{
		SelectedValues ??= new();
		SelectedValues.Add(i);
	}
}
