@if (Message != null)
{
	<div class="p-2 rounded @BackgroundColorClass">
		@if (Title != null)
		{
			<h4 class="text-xl">@Title</h4>
		}

		<p>@Message</p>

		@if (Dismissable)
		{
			<button class="w-20 py-1 rounded @ButtonColorClass" @onclick="Dismiss">Dismiss</button>
		}
	</div>
}

@code
{
	[Parameter] public string? Title { get; set; }
	[Parameter] public string? Message { get; set; }
	[Parameter] public ResultBarType ResultBarType { get; set; }
	[Parameter] public bool Dismissable { get; set; } = true;
	[Parameter] public Action? DismissEvent { get; set; }

	public string BackgroundColorClass => ResultBarType switch
	{
		ResultBarType.Success => "bg-dark-green",
		ResultBarType.ValidationError => "bg-dark-orange",
		ResultBarType.FatalError => "bg-dark-red",
		_ => string.Empty,
	};

	public string ButtonColorClass => ResultBarType switch
	{
		ResultBarType.Success => "bg-green",
		ResultBarType.ValidationError => "bg-orange",
		ResultBarType.FatalError => "bg-red",
		_ => string.Empty,
	};

	[Parameter]
	public EventCallback<string?> MessageChanged { get; set; }

	private void Dismiss()
	{
		Message = null;
		DismissEvent?.Invoke();
	}
}
