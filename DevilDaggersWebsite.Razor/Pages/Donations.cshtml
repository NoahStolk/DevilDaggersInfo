@page
@inject ApplicationDbContext dbContext
@using DevilDaggersCore.Game
@using DevilDaggersWebsite.Entities
@using DevilDaggersWebsite.Enumerators
@using DevilDaggersWebsite.Extensions
@model DonationsModel
@{
	ViewData["Title"] = "Donations";

	IOrderedEnumerable<KeyValuePair<int, int>> donators = Model.DonatorsWithReceivedEuroAmounts.OrderByDescending(kvp => kvp.Value);
	int total = donators.Count();
}

<header>
	<h1>@ViewData["Title"]</h1>
</header>

<main role="main">
	<p>
		I've built this website and the tools that come with it entirely in my free time. If you appreciate the work I've done, or want to support hosting and domain costs for the website, you can consider <a href="//paypal.me/NoahStolk">donating via PayPal</a>. Please be sure to include your leaderboard username, rank, or user ID (user ID can be found by hovering over your rank number on the <a asp-page="./Leaderboard/Index">Leaderboard</a> page), so I can add you to the list of donators below, or if you prefer to stay anonymous, an alias or no name at all is fine too.
	</p>
	<p>
		Thanks to everyone who donated!
	</p>
	<p>
		@foreach (Dagger dagger in GameInfo.GetDaggers(GameVersion.V31))
		{
			<img src="~/Images/Daggers/@(dagger.Name)Small.png" style="margin: 8px;" />
		}
	</p>

	<div class="row">
		@{
			const float columns = 3f;
			int interval = (int)Math.Ceiling(total / columns);
			if (interval % 2 != 0)
				interval++;
			for (int i = 0; i < total; i += interval)
			{
				<div class="col-lg-4 col-md-12 col-sm-12 col-xs-12">
					@{
						foreach (KeyValuePair<int, int> kvp in donators.Skip(i).Take(interval))
						{
							Player donator = dbContext.Players.First(d => d.Id == kvp.Key);
							string username = donator.HideDonations ? "(anonymous)" : donator.PlayerName;

							List<string> donationsGroupedByCurrency = new();
							foreach (var donations in Model.Donations.Where(d => !d.IsRefunded && d.PlayerId == kvp.Key).GroupBy(d => d.Currency))
							{
								donationsGroupedByCurrency.Add($"{donations.Key.GetChar()} {(donations.Sum(d => d.Amount) / 100.0).ToString("0.00")} {(donations.Key.ToString().ToUpper())}");
							}
							string tooltipText = string.Join(" + ", donationsGroupedByCurrency);

							<div class="donator flex-container">
								<div style="white-space: nowrap; flex-grow: 4;" class="text-left devil">@username</div>
								<div class="text-right devil donation-tooltip" data-toggle="tooltip" data-placement="left" title="@tooltipText">
									@(Currency.Eur.GetChar())
									@((kvp.Value / 100.0).ToString("0.00"))
								</div>
							</div>
						}
					}
				</div>
			}
		}
	</div>
</main>

@section Styles {
	<link rel='stylesheet' href='~/styles/donations.css' asp-append-version="true" />
}
