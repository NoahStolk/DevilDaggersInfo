@page
@model SpawnsetsModel
@using DevilDaggersCore.Spawnsets
@using DevilDaggersCore.Utils
@using DevilDaggersWebsite.Razor.Utils
@using DevilDaggersWebsite.Dto
@{
	ViewData["Title"] = "Spawnsets";
}

<header>
	<h1>@ViewData["Title"]</h1>
</header>

<main role="main">
	<p>
		Here's a list of custom spawnsets created by the community. They can be played in the real game. Read below for more information.
	</p>

	@{
		@await Html.PartialAsync("Partials/NavigationPartial", Model)

		<div class="navigation-result-wrapper">
			@if (Model.PaginatedList.Count > 0)
			{
				<table>
					<thead>
						<tr>
							<th class="hidden-xs" colspan="5"></th>
							<th class="hidden-xs hidden-sm hidden-md" colspan="2">Non-loop</th>
							<th class="hidden-xs hidden-sm hidden-md" colspan="3">Loop</th>
						</tr>
						<tr class="navigation-sort">
							<th width="360">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.Name"
								   asp-route-pageIndex="@Model.PageIndex">Name</a>
							</th>
							<th width="200">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.Author"
								   asp-route-pageIndex="@Model.PageIndex">Author</a>
							</th>
							<th class="hidden-xs" width="160">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.LastUpdated"
								   asp-route-pageIndex="@Model.PageIndex">Last updated</a>
							</th>
							<th class="hidden-xs hidden-sm hidden-md" width="140">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.GameVersion"
								   asp-route-pageIndex="@Model.PageIndex">Game version</a>
							</th>
							<th class="hidden-xs" width="140">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.GameMode"
								   asp-route-pageIndex="@Model.PageIndex">Game mode</a>
							</th>
							<th class="hidden-xs hidden-sm hidden-md" width="140">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.NonLoopLength"
								   asp-route-pageIndex="@Model.PageIndex">Length</a>
							</th>
							<th class="hidden-xs hidden-sm hidden-md" width="80">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.NonLoopSpawns"
								   asp-route-pageIndex="@Model.PageIndex">Spawns</a>
							</th>
							<th class="hidden-xs hidden-sm hidden-md" width="140">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.LoopLength"
								   asp-route-pageIndex="@Model.PageIndex">Length (wave 1)</a>
							</th>
							<th class="hidden-xs hidden-sm hidden-md" width="80">
								<a asp-page="./Spawnsets"
								   asp-route-searchAuthor="@Model.SearchAuthor"
								   asp-route-searchName="@Model.SearchName"
								   asp-route-sortOrder="@Model.LoopSpawns"
								   asp-route-pageIndex="@Model.PageIndex">Spawns</a>
							</th>
						</tr>
					</thead>
					<tbody>
						@foreach (SpawnsetFile spawnsetFile in Model.PaginatedList)
						{
							<tr>
								<td><a class="prevent-break-out" asp-page="Spawnset" asp-route-spawnset="@spawnsetFile.Name">@spawnsetFile.Name</a></td>
								<td><a class="prevent-break-out" asp-page="/Spawnsets" asp-route-searchAuthor="@spawnsetFile.AuthorName">@spawnsetFile.AuthorName</a></td>
								<td class="hidden-xs">
									@spawnsetFile.LastUpdated.ToString("dd MMM yyyy")
								</td>
								<td class="hidden-xs hidden-sm hidden-md">
									@Spawnset.GetGameVersionString(spawnsetFile.SpawnsetData.WorldVersion, spawnsetFile.SpawnsetData.SpawnVersion)
								</td>
								<td class="hidden-xs">
									@spawnsetFile.SpawnsetData.GameMode
								</td>
								<td class="hidden-xs hidden-sm hidden-md">
									@(!spawnsetFile.SpawnsetData.NonLoopLength.HasValue ? RazorUtils.NAString : Html.Raw(spawnsetFile.SpawnsetData.NonLoopLength.Value.ToString(FormatUtils.SpawnTimeFormat)))
								</td>
								<td class="hidden-xs hidden-sm hidden-md">
									@(spawnsetFile.SpawnsetData.NonLoopSpawnCount == 0 ? RazorUtils.NAString : Html.Raw(spawnsetFile.SpawnsetData.NonLoopSpawnCount))
								</td>
								<td class="hidden-xs hidden-sm hidden-md">
									@(!spawnsetFile.SpawnsetData.LoopLength.HasValue ? RazorUtils.NAString : Html.Raw(spawnsetFile.SpawnsetData.LoopLength.Value.ToString(FormatUtils.SpawnTimeFormat)))
								</td>
								<td class="hidden-xs hidden-sm hidden-md">
									@(spawnsetFile.SpawnsetData.LoopSpawnCount == 0 ? RazorUtils.NAString : Html.Raw(spawnsetFile.SpawnsetData.LoopSpawnCount))
								</td>
							</tr>
						}
					</tbody>
				</table>
			}
			else
			{
				@:Search returned no results
			}
		</div>
	}

	<h2>How to play spawnsets</h2>

	<h3>The easy way</h3>
	<ol>
		<li>Download <a asp-page="/Tools/DevilDaggersSurvivalEditor">DevilDaggersSurvivalEditor</a>.</li>
		<li>Go to "File", then "Open from DevilDaggers.info".</li>
		<li>Click on the spawnset you want to play and click "Yes" when it asks you if you want it to replace the current survival file. You can change the survival file while the game is running and it will load the new file when starting a new run.</li>
	</ol>
	<h3>The original way</h3>
	<ol>
		<li>Select the spawnset you want to play from the list above.</li>
		<li>Click the download button.</li>
		<li>Rename the file to "survival" (no quotes). The file should not have a file extension.</li>
		<li>
			Navigate to the directory where Devil Daggers is installed and open the folder named "mods".<br />
			By default, this is <span class="path">C:\Program Files (x86)\Steam\steamapps\common\devildaggers\mods</span> on Windows.
		</li>
		<li>Place the downloaded file (now called "survival") in that folder.</li>
	</ol>
	<h3>Notes</h3>
	<ul>
		<li>It is not recommended to change the original survival file (the one in the dd folder). If that file has a modified arena, replays from the official leaderboards will NOT work properly and will likely crash the game. DevilDaggersSurvivalEditor always uses the file in the mods folder and does not touch the one in dd.</li>
	</ul>

	<h2>FAQ</h2>

	@await Html.PartialAsync("Partials/FaqSpawnsetPartial")
</main>

@section Styles {
	<link rel='stylesheet' href='~/styles/navigation.css' asp-append-version="true" />
}
