@page
@using DevilDaggersCore.Utils
@model DevilDaggersWebsite.Razor.Pages.Leaderboard.PlayerModel
@{
	string? username = Model.Entry?.Username;
	ViewData["Title"] = string.IsNullOrEmpty(username) ? "Player" : username;
	string daggerCssName = "devil";
	string deathStyle = $"color: #{Model.Death?.ColorCode ?? "444"}";
}

<header>
	<h1>@ViewData["Title"]</h1>
</header>

<main role="main">
	@if (Model.Entry == null)
	{
		<p>Failed to retrieve player with ID @Model.PlayerId.</p>
	}
	else
	{
		<div class="row">
			<div class="col-xs-12 col-sm-6 col-md-3">
				<h2>...</h2>
				<div class="leaderboard-data-container">
					<div class="row">
						<div class="col-xs-6">Current rank</div>
						<div class="col-xs-6 text-right">@Model.Entry.Rank</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Flag</div>
						<div class="col-xs-6 text-right">
							@if (!string.IsNullOrWhiteSpace(Model.Player?.CountryCode))
							{
								<img src="/images/Flags/24x24/@(Model.Player.CountryCode).png" /> @Model.CountryName
							}
						</div>
					</div>
				</div>
			</div>
			<div class="col-xs-12 col-sm-6 col-md-3">
				<h2>History</h2>
				<div class="leaderboard-data-container">
					<div class="row">
						<div class="col-xs-6">Best rank recorded</div>
						<div class="col-xs-6 text-right">@Model.BestRankRecorded</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Past usernames</div>
						@if (Model.UsernameAliases.Count > 0)
						{
							<div class="col-xs-6 devil text-right">
								@Html.Raw(string.Join(", ", Model.UsernameAliases.Select(ua => $"<span class=\"white\">{ua}</span>")))
							</div>
						}
					</div>
				</div>
			</div>
			<div class="col-xs-12 col-sm-6 col-md-3">
				<h2>Personal Best</h2>
				<div class="leaderboard-data-container">
					<div class="row">
						<div class="col-xs-6">Time</div>
						<div class="col-xs-6 devil text-right @daggerCssName">@Model.Entry.Time.FormatTimeInteger(false)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Kills</div>
						<div class="col-xs-6 text-right">@Model.Entry.Kills.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Gems</div>
						<div class="col-xs-6 text-right">@Model.Entry.Gems.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Accuracy</div>
						<div class="col-xs-6 text-right">@Model.Entry.Accuracy.ToString(FormatUtils.AccuracyFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Daggers hit</div>
						<div class="col-xs-6 text-right">@Model.Entry.DaggersHit.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Daggers fired</div>
						<div class="col-xs-6 text-right">@Model.Entry.DaggersFired.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Death type</div>
						<div class="col-xs-6 text-right @deathStyle">@(Model.Death?.Name)</div>
					</div>
				</div>
			</div>
			<div class="col-xs-12 col-sm-6 col-md-3">
				<h2>Total Statistics</h2>
				<div class="leaderboard-data-container">
					<div class="row">
						<div class="col-xs-6">Total time</div>
						<div class="col-xs-6 text-right @daggerCssName">@Model.Entry.TimeTotal.FormatTimeInteger(true)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Total kills</div>
						<div class="col-xs-6 text-right">@Model.Entry.KillsTotal.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Total gems</div>
						<div class="col-xs-6 text-right">@Model.Entry.GemsTotal.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Total accuracy</div>
						<div class="col-xs-6 text-right">@Model.Entry.AccuracyTotal.ToString(FormatUtils.AccuracyFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Total daggers hit</div>
						<div class="col-xs-6 text-right">@Model.Entry.DaggersHitTotal.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Total daggers fired</div>
						<div class="col-xs-6 text-right">@Model.Entry.DaggersFiredTotal.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
					<div class="row">
						<div class="col-xs-6">Total deaths</div>
						<div class="col-xs-6 text-right">@Model.Entry.DeathsTotal.ToString(FormatUtils.LeaderboardIntFormat)</div>
					</div>
				</div>
			</div>
			@if (Model.Player != null && Model.Player.Dpi.HasValue)
			{
				<div class="col-xs-12 col-sm-6 col-md-3">
					<h2>Settings</h2>
					<div class="leaderboard-data-container">
						@if (Model.Player.Edpi.HasValue)
						{
							<div class="row">
								<div class="col-xs-6">eDPI</div>
								<div class="col-xs-6 text-right">@Model.Player.Edpi.Value.ToString(FormatUtils.MouseSensitivityFormat)</div>
							</div>
						}
						<div class="row">
							<div class="col-xs-6">DPI</div>
							<div class="col-xs-6 text-right">@Model.Player.Dpi</div>
						</div>
						@if (Model.Player.InGameSens.HasValue)
						{
							<div class="row">
								<div class="col-xs-6">In-game sens</div>
								<div class="col-xs-6 text-right">@Model.Player.InGameSens.Value.ToString(FormatUtils.MouseSensitivityFormat)</div>
							</div>
						}
						@if (Model.Player.Fov.HasValue)
						{
							<div class="row">
								<div class="col-xs-6">FOV</div>
								<div class="col-xs-6 text-right">@Model.Player.Fov</div>
							</div>
						}
						@if (Model.Player.Gamma.HasValue)
						{
							<div class="row">
								<div class="col-xs-6">Gamma</div>
								<div class="col-xs-6 text-right">@Model.Player.Gamma</div>
							</div>
						}
						@if (Model.Player.RightHanded.HasValue)
						{
							<div class="row">
								<div class="col-xs-6">Hand orientation</div>
								<div class="col-xs-6 text-right">@Model.Player.RightHandedString</div>
							</div>
						}
						@if (Model.Player.FlashEnabled.HasValue)
						{
							<div class="row">
								<div class="col-xs-6">Hand flash</div>
								<div class="col-xs-6 text-right">@Model.Player.FlashEnabledString</div>
							</div>
						}
						@if (Model.Player.UsesLegacyAudio.HasValue)
						{
							<div class="row">
								<div class="col-xs-6">Legacy audio</div>
								<div class="col-xs-6 text-right">@Model.Player.UsesLegacyAudioString</div>
							</div>
						}
					</div>
				</div>
			}
		</div>

		@if (Model.HasValidTop100Graph)
		{
			<h2>Top 100 progression</h2>
			<p>
				Note that the graph data is based on the <a asp-page="/Leaderboard/History">Leaderboard History</a>, and might therefore be incomplete.
			</p>
			<p>
				Also note that the graph data is only based on a player's highscores; the rank and username do not update until the next top 100 highscore.
			</p>

			<div class="chart" id="user-progression-chart">
				<table class="highlighter" id="user-progression-highlighter">
					<tr><td>Date</td><td id="h-date"></td></tr>
					<tr><td>Rank</td><td id="h-rank"></td></tr>
					<tr><td>Time</td><td id="h-time"></td></tr>
					<tr><td>Username</td><td id="h-username"></td></tr>
					<tr><td>Gems</td><td id="h-gems"></td></tr>
					<tr><td>Kills</td><td id="h-kills"></td></tr>
					<tr><td>Accuracy</td><td id="h-accuracy"></td></tr>
					<tr><td>Death type</td><td id="h-death-type"></td></tr>
				</table>
			</div>

			<h2>Activity</h2>
			<div class="chart" id="user-activity-chart">
				<table class="highlighter" id="user-activity-highlighter">
					<tr><td>Period</td><td id="h-activity-date"></td></tr>
					<tr><td>Approximate deaths per day</td><td id="h-activity-deaths-per-day"></td></tr>
					<tr><td>Total deaths</td><td id="h-activity-deaths"></td></tr>
				</table>
			</div>
		}
	}
</main>

@section Scripts {
	<script defer src='~/plugins/jqPlot/jquery.jqplot.min.js' asp-append-version='true'></script>
	<script defer src='~/plugins/jqPlot/jqplot.dateAxisRenderer.js' asp-append-version='true'></script>
	<script defer src='~/plugins/jqPlot/jqplot.canvasTextRenderer.js' asp-append-version='true'></script>
	<script defer src='~/plugins/jqPlot/jqplot.canvasAxisLabelRenderer.js' asp-append-version='true'></script>
	<script defer src='~/plugins/jqPlot/jqplot.canvasAxisTickRenderer.js' asp-append-version='true'></script>
	<script defer src='~/plugins/jqPlot/jqplot.highlighter.js' asp-append-version='true'></script>
	<script defer src='~/plugins/jqPlot/jqplot.canvasOverlay.js' asp-append-version='true'></script>
	<script defer src='~/scripts/charts/chart.js' asp-append-version='true'></script>
	<script defer src='~/scripts/charts/history/chart-line.js' asp-append-version='true'></script>
	<script defer src='~/scripts/charts/history/user-progression.js' asp-append-version='true'></script>
	<script defer src='~/scripts/charts/history/user-activity.js' asp-append-version='true'></script>
}

@section Styles {
	<link rel='stylesheet' href='~/styles/leaderboard.css' />
	<link rel='stylesheet' href='~/styles/leaderboard-player.css' />

	<link rel='stylesheet' href='~/plugins/jqPlot/jquery.jqplot.min.css' />
	<link rel='stylesheet' href='~/styles/chart.css' />
}
