@page
@model IndexModel
@{
	ViewData["Title"] = "SpawnsetFiles";
}

<h1>@ViewData["Title"]</h1>

<p>In order to add spawnsets you'll need to do two things. Both of these need to be done. The site ignores files without a database record and vice versa.</p>
<ul>
	<li>Upload a file to the file system.</li>
	<li>Add a record to the database.</li>
</ul>
<h2>Notes</h2>
<ul>
	<li>The file name must match the spawnset name (case sensitive).</li>
	<li>Make sure the author of the spawnset is added as a <a asp-page="../Players/Index">player</a>. If the user ID is unknown, use the blank name (999999) until the author gets back to you.</li>
	<li>If you want to edit or rename a spawnset file, you will need to delete and re-upload it.</li>
	<li>Do not change spawnset files in the file system that have an existing custom leaderboard, as that will invalidate all the current scores. You should probably make a new spawnset instead.</li>
	<li>The "LastUpdated" field is specified in Coordinated Universal Time (UTC). You should always leave this as default unless the actual spawnset got updated. The date should represent when the spawnset was last updated in terms of what's being changed in the game. Don't update the "LastUpdated" field if the description was edited.</li>
	<li>Do not upload spawnsets with swastika arenas or anything of the sort.</li>
	<li>Do not upload spawnsets that are incompatible with the website or DDSE in any way.</li>
</ul>
@if (Model.DeadFiles.Count > 0)
{
	<h2>Dead files</h2>
	<ul>
		@foreach (string fileName in Model.DeadFiles)
		{
			<li>@fileName</li>
		}
	</ul>
}
@if (Model.MissingFiles.Count > 0)
{
	<h2>Missing files</h2>
	<ul>
		@foreach (string fileName in Model.MissingFiles)
		{
			<li>@fileName</li>
		}
	</ul>
}
<p><a asp-page="CreateOrEdit">Create New</a></p>
<p><a asp-page="UploadFile">Upload File</a></p>
<p><a asp-page="DeleteFile">Delete File</a></p>
<table class="table admin-table">
	<thead>
		<tr>
			@foreach (var pi in Model.EntityDisplayProperties)
			{
				<th>@pi.Name</th>
			}
			<th></th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var entity in Model.DbSet)
		{
			<tr>
				@foreach (var pi in Model.EntityDisplayProperties)
				{
					<td>@Model.GetPropertyValueString(pi, entity)</td>
				}
				<td>
					<a asp-page="CreateOrEdit" asp-route-id="@entity.Id">Edit</a>
				</td>
				<td>
					<a asp-page="Delete" asp-route-id="@entity.Id">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>

@section Styles {
	<link rel='stylesheet' href='~/styles/admin.css' asp-append-version="true" />
}
