@model IPaginationModel
@using DevilDaggersWebsite.Razor.PageModels
@using DevilDaggersWebsite.Razor.Utils
@{
	int[] widths = new int[2] { 160, 160 };
	using (Html.BeginForm(FormMethod.Get))
	{
		<div class="navigation-wrapper">
			<div>
				<div class="input-label text-left" style="@RazorUtils.GetCssWidth(widths[0])">Author search:</div>
				<div style="@RazorUtils.GetCssWidth(widths[1])">@Html.TextBoxFor(m => m.SearchAuthor, new { @class = "input" })</div>
			</div>
			<div>
				<div class="input-label text-left" style="@RazorUtils.GetCssWidth(widths[0])">Name search:</div>
				<div style="@RazorUtils.GetCssWidth(widths[1])">@Html.TextBoxFor(m => m.SearchName, new { @class = "input" })</div>
			</div>

			<input class="btn" type="submit" value="Search" />

			@if (Model.TotalResults > 0)
			{
				<div>Page @Model.PageIndex of @Model.TotalPages</div>
				<div>Showing @((Model.PageIndex - 1) * Model.PageSize + 1) - @(Math.Min(Model.TotalResults, Model.PageIndex * Model.PageSize)) of @Model.TotalResults results</div>
			}
			else
			{
				<div>Page 0 of 0</div>
				<div>Showing 0 - 0 of 0 results</div>
			}

			@{
				List<int> pages = new[] { 1, Model.PageIndex - 1, Model.PageIndex + 1, Model.TotalPages }.Select(i => Math.Clamp(i, 1, Model.TotalPages)).ToList();
				string[] buttons = new[] { "|<", "<", ">", ">|" };
				for (int i = 0; i < pages.Count; i++)
				{
					<a asp-route-searchAuthor="@Model.SearchAuthor"
					   asp-route-searchName="@Model.SearchName"
					   asp-route-sortOrder="@Model.SortOrder"
					   asp-route-pageIndex="@pages[i]"
					   class="btn btn-default btn-page @(pages[i] == Model.PageIndex ? "disabled" : string.Empty)">
						@buttons[i]
					</a>
				}
			}
		</div>
	}
}
