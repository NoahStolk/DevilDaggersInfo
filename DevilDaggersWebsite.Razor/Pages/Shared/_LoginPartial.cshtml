@using DevilDaggersWebsite.Authorization
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
	string? id = UserManager.GetUserId(User);
	IdentityUser? identityUser = await UserManager.FindByIdAsync(id);

	if (id == null || identityUser == null)
		throw new UnauthorizedAccessException("Not allowed to access this resource.");
}

@if (SignInManager.IsSignedIn(User))
{
	<li class="dropdown">
		<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Admin <span class="caret"></span></a>
		<ul class="dropdown-menu">
			<li class="nav-item">
				<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index">Manage account</a>
			</li>
			<li class="nav-item">
				<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })">Logout</a>
			</li>
		</ul>
	</li>
}
else
{
	<li class="nav-item">
		<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
	</li>
	<li class="nav-item">
		<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
	</li>
}
