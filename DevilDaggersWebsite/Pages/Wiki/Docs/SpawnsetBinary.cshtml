@page
@using DevilDaggersCore.Game
@using DevilDaggersWebsite.Code.Docs;
@using DevilDaggersWebsite.Code.Utils
@model DevilDaggersWebsite.Pages.Wiki.Docs.SpawnsetBinaryModel
@{
	ViewData["Title"] = "Spawnset Binary";
	GameVersion v3 = GameInfo.GameVersions[GameInfo.DefaultGameVersion];
}

<header>
	<h1>@ViewData["Title"]</h1>
</header>

<main role="main">
	<h2>Format</h2>

	<p>
		The internal structure of spawnset binaries consists of 4 parts:
	</p>
	<ul>
		<li>Header buffer (36 bytes)</li>
		<li>Arena buffer (10404 bytes)</li>
		<li>Spawns header buffer (40 bytes)</li>
		<li>Spawns buffer (28 bytes x the amount of spawns)</li>
	</ul>

	<h3>Header buffer</h3>
	<p>
		Fixed-length buffer of 36 bytes. Contains shrinking control and brightness values as well as presumably a version number and some unknown miscellaneous values that usually cause the game to crash or behave oddly when modified.
	</p>
	<p>
		The header buffer for the default spawnset looks like this:
	</p>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.Header)</div>

	<h3>Arena buffer</h3>
	<p>
		Fixed-length one-dimensional array of 2601 (51*51 = 2601 tiles) 32-bit floating point numbers (2601*32/8 = 10404 bytes) representing the height of each tile in the arena.
	</p>

	<h3>Spawns header buffer</h3>
	<p>
		Fixed-length buffer of 40 bytes. Contains the amount of spawns, but mainly unknown values.
	</p>
	<p>
		The spawns header buffer for the default spawnset looks like this:
	</p>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.SpawnsHeader)</div>

	<h3>Spawns buffer</h3>
	<p>
		This is the only part of the file with a variable length. It represents the list of spawns. Each spawn buffer consists of 28 bytes that include the enemy type as a 32-bit integer and the delay value as a 32-bit floating point number. The other bytes in each of the spawn buffers seem to be the same for all of them and appear to have no meaning.
	</p>
	<p>
		These are the first 3 spawns in the original game:
	</p>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.FirstSpawn)</div>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.SecondSpawn)</div>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.ThirdSpawn)</div>

	<p>
		Here's the list of enemy types that the survival file defines:
	</p>
	<ul>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("00000000", "Squid I", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("01000000", "Squid II", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("02000000", "Centipede", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("03000000", "Spider I", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("04000000", "Leviathan", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("05000000", "Gigapede", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("06000000", "Squid III", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("07000000", "Thorn", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("08000000", "Spider II", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("09000000", "Ghostpede", typeof(int)) })</li>
		<li>@await Html.PartialAsync("_BinaryFieldCollection", new List<BinaryField> { new BinaryField("FFFFFFFF", "EMPTY", typeof(int)) })</li>
	</ul>

	<h3>Overview</h3>
	<div class="binary">
		[header]<br />
		[arena]<br />
		[spawns header]<br />
		(for every spawn)<br />
		- [spawn enemy type]<br />
		- [spawn delay]<br />
		- [unknown]
	</div>

	<h2>Files</h2>

	<p>
		There are 3 files in Devil Daggers which use this format. These are "survival", "dagger", and "menu", although only "survival" makes use of all the features.
	</p>

	<ul>
		<li><span class="path">devildaggers/dd/dagger</span> contains the dagger lobby.</li>
		<li><span class="path">devildaggers/dd/menu</span> contains the menu.</li>
		<li><span class="path">devildaggers/dd/survival</span> contains the game.</li>
	</ul>
</main>

@section Styles {
	<link rel='stylesheet' href='~/styles/binary.css' />
}