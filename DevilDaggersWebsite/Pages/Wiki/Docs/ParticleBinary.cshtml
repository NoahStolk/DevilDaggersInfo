@page
@model DevilDaggersWebsite.Pages.Wiki.Docs.ParticleBinaryModel
@{
	ViewData["Title"] = "Particle Binary";
}

<header>
	<h1>@ViewData["Title"]</h1>
</header>

<main role="main">
	<h2>Format</h2>

	<p>
		The internal structure of particle binaries consists of 2 parts:
	</p>
	<ul>
		<li>Header buffer (8 bytes)</li>
		<li>Data buffer (variable amount of bytes)</li>
	</ul>

	<h3>Header buffer</h3>
	<p>
		Fixed-length buffer of 8 bytes. Contains the number of particles and an unknown value which seems to serve as a version number or a format identifier.
	</p>
	<p>
		The header buffer for the default particle file looks like this:
	</p>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.Header)</div>

	<h3>Data buffer</h3>
	<p>
		Variable-length buffer. Contains all particle chunks. A particle chunk consists of 2 parts: its name and its data. This is how the first 2 particle names are stored:
	</p>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.FirstParticleName)</div>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.SecondParticleName)</div>
	<p>
		And here's the data for the first particle (blood). This part is 188 bytes for every particle. Not much is known about the data itself as of now.
	</p>
	<div>@await Html.PartialAsync("_BinaryFieldCollection", Model.FirstParticleData)</div>

	<h3>Overview</h3>
	<ul>
		<li>
			<span class="binary-structure">Header buffer</span>
			<ul>
				<li>Unknown (probably version or identifier)</li>
				<li>Particle count</li>
			</ul>
		</li>
		<li>
			<span class="binary-structure">Data buffer</span>
			<ul>
				<li>
					For every particle:
					<ul>
						<li>Particle name</li>
						<li>Particle data</li>
					</ul>
				</li>
			</ul>
		</li>
	</ul>

	<h2>Files</h2>

	<p>
		There is 1 file in Devil Daggers which uses this format. This is "particle".
	</p>

	<ul>
		<li class="path">devildaggers/dd/particle</li>
	</ul>
</main>

@section Styles {
	<link rel='stylesheet' href='~/styles/binary.css' />
}