@page
@model DevilDaggersWebsite.Pages.ApiModel
@using DevilDaggersWebsite.Code.Api
@using DevilDaggersWebsite.Code.Utils
@{
	ViewData["Title"] = "API Overview";
}

<h1>@ViewData["Title"]</h1>

<main role="main">
	<p>
		This is the main page for the API for DevilDaggers.info.
		All API functions currently available can be found here.
	</p>
	<p>
		I mainly set this up so I could easily communicate with the website through external environments, such as within <a asp-page="/Tools/DevilDaggersSurvivalEditor">DevilDaggersSurvivalEditor</a> or Discord bots.
		However, this is a public API; feel free to use it for any tool or application you've made yourself.
		I'd also be happy to implement more functions should anyone need it, so let me know if you have any requests.
	</p>
	<p>
		This table is automatically generated and will always be up to date. Additionally, the Swagger page can be found <a href="/swagger/index.html">here</a>, and the OpenAPI specification can be found <a href="/swagger/v1/swagger.json">here</a>.
	</p>

	<h2>Endpoints</h2>
	<div class="api-list">
		<div class="row text-bold">
			<div class="col-lg-1 col-md-1 col-sm-2 col-xs-2">HTTP method</div>
			<div class="col-lg-3 col-md-3 col-sm-5 col-xs-5">Url</div>
			<div class="col-lg-3 col-md-3 col-sm-5 col-xs-5">Return type</div>
			<div class="col-lg-3 col-md-3 hidden-sm hidden-xs">Parameters</div>
			<div class="col-lg-2 col-md-2 hidden-sm hidden-xs">Expected status codes</div>
		</div>

		@{
			foreach (Endpoint endpoint in Model.Endpoints.Where(e => string.IsNullOrEmpty(e.NewRouteToUse)))
			{
				<div class="row">
					<div class="col-lg-1 col-md-1 col-sm-2 col-xs-2">@endpoint.HttpMethod</div>
					<div class="col-lg-3 col-md-3 col-sm-5 col-xs-5"><a href=@endpoint.Url class="dont-break-out">@endpoint.Url</a></div>
					<div class="col-lg-3 col-md-3 col-sm-5 col-xs-5">@Html.Raw(RazorUtils.GetFormattedReturnType(endpoint.ReturnType))</div>
					<div class="col-lg-3 col-md-3 hidden-sm hidden-xs">@Html.Raw(endpoint.Parameters.Length == 0 ? RazorUtils.NAString.ToString() : string.Join("<br>", endpoint.Parameters.Select(p => p.FormattedDescription.ToString().Trim())))</div>
					<div class="col-lg-2 col-md-2 hidden-sm hidden-xs">@string.Join(", ", endpoint.StatusCodes)</div>
				</div>
			}
		}
	</div>

	@if (Model.Endpoints.Any(e => !string.IsNullOrEmpty(e.NewRouteToUse)))
	{
		<h2>Deprecated endpoints</h2>
		<p>
			These will be removed in the near future.
		</p>

		<div class="api-list">
			<div class="row text-bold">
				<div class="col-lg-3 col-md-3 col-sm-6 col-xs-6">Url</div>
				<div class="col-lg-3 col-md-3 col-sm-6 col-xs-6">Deprecation message</div>
				<div class="col-lg-3 col-md-3 hidden-sm hidden-xs">Return type</div>
				<div class="col-lg-3 col-md-3 hidden-sm hidden-xs">Parameters</div>
			</div>

			@{
				foreach (Endpoint endpoint in Model.Endpoints.Where(e => !string.IsNullOrEmpty(e.NewRouteToUse)))
				{
					<div class="row">
						<div class="col-lg-3 col-md-3 col-sm-6 col-xs-6"><a href=@endpoint.Url class="dont-break-out">@endpoint.Url</a></div>
						<div class="col-lg-3 col-md-3 col-sm-6 col-xs-6 api-endpoint-deprecated">[DEPRECATED] Use @endpoint.NewRouteToUse instead.</div>
						<div class="col-lg-3 col-md-3 hidden-sm hidden-xs">@Html.Raw(RazorUtils.GetFormattedReturnType(endpoint.ReturnType))</div>
						<div class="col-lg-3 col-md-3 hidden-sm hidden-xs">@Html.Raw(endpoint.Parameters.Length == 0 ? RazorUtils.NAString.ToString() : string.Join("<br>", endpoint.Parameters.Select(p => p.FormattedDescription.ToString().Trim())))</div>
					</div>
				}
			}
		</div>
	}
</main>

@section Styles {
	<link rel='stylesheet' href='~/styles/api.css' />
}