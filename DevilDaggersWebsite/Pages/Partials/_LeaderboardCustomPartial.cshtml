@using DevilDaggersCore.Game
@using DevilDaggersWebsite.Models.User
@using DevilDaggersWebsite.Models.Database.CustomLeaderboards
@using DevilDaggersWebsite.Utils
@inject CoreBase.Services.ICommonObjects CommonObjects

<div class="leaderboard-container flex-container flex-center">
	<div class="leaderboard-title-row flex-container">
		<div class="sorter text-center" sort="rank">#</div>
		<div class="sorter text-center" sort="flag">Flag</div>
		<div class="sorter text-center" sort="username">Username</div>
		<div class="sorter text-center" sort="time">Time</div>
		<div class="sorter hidden-xs text-center" sort="kills">Kills</div>
		<div class="sorter hidden-xs text-center" sort="gems">Gems</div>
		<div class="sorter hidden-xs text-center" sort="accuracy">Accuracy</div>
		<div class="sorter hidden-xs text-center" sort="death-type">Death type</div>
		<div class="sorter hidden-xs hidden-sm hidden-md text-center" sort="enemies-alive">Enemies alive</div>
		<div class="sorter hidden-xs hidden-sm hidden-md text-center" sort="homing">Homing</div>
		<div class="sorter hidden-xs hidden-sm hidden-md text-center" sort="level-2">Level 2</div>
		<div class="sorter hidden-xs hidden-sm hidden-md text-center" sort="level-3">Level 3</div>
		<div class="sorter hidden-xs hidden-sm hidden-md text-center" sort="level-4">Level 4</div>
		<div class="sorter hidden-xs hidden-sm hidden-md text-center" sort="submit-date">Submit date</div>
	</div>
	<div class="leaderboard-body">
		@{
			IEnumerable<Donator> donators = UserUtils.GetDonators(CommonObjects);
			IEnumerable<Flag> flags = UserUtils.GetFlags(CommonObjects);
			IEnumerable<UserTitleCollection> titleCollections = UserUtils.GetTitleCollections(CommonObjects);
			foreach (CustomEntry entry in Model.Entries)
			{
				Donator donator = donators.Where(d => d.ID == entry.PlayerID).FirstOrDefault();
				Flag flag = flags.Where(f => f.ID == entry.PlayerID).FirstOrDefault();
				UserTitleCollection titles = titleCollections.Where(t => t.ID == entry.PlayerID).FirstOrDefault();

				Dagger dagger = Model.Leaderboard.GetDagger(entry.Time);
				Death death = Game.GetDeathFromDeathType(entry.DeathType, Game.GameVersions["V3"]);

				string flagCode = flag == null ? "00" : flag.CountryCode;
				string daggerColor = dagger.Name.ToLower();
				string deathStyle = $"color: #{death.ColorCode};";

				<div class="sort" @entry.ToHTMLData(flagCode)>
					<div class="leaderboard-row flex-container" id="@(entry.Rank)-row">
						<div class="text-right">
							<span data-toggle="tooltip" title="ID: @entry.PlayerID" class="leaderboard-tooltip">@entry.Rank</span>
						</div>
						<div>
							@if (flagCode == "00")
							{
								<span><img src="/Images/Flags/24x24/@(flagCode).png" /></span>
							}
							else
							{
								<span class="leaderboard-tooltip" data-toggle="tooltip" title="@UserUtils.CountryNames[flagCode]"><img src="/Images/Flags/24x24/@(flagCode).png" /></span>
							}
						</div>
						<div class="text-left leaderboard-username">
							@{
								<span class="@daggerColor" style="background-position-y: 3px;">@entry.Username</span>

								if (titles != null)
								{
									foreach (string title in titles.Titles)
									{
										<span class="leaderboard-tooltip" data-toggle="tooltip" title="@title"><img src="/Images/Icons/@(UserUtils.TitleImages[title]).png" /></span>
									}
								}
								if (donator != null)
								{
									string title = "Donator";
									<span class="leaderboard-tooltip" data-toggle="tooltip" title="@title"><img src="/Images/Icons/@(UserUtils.TitleImages[title]).png" /></span>
								}
							}
						</div>
						<div class="text-right @daggerColor">@((entry.Time).ToString("0.0000"))</div>
						<div class="hidden-xs text-right">@entry.Kills</div>
						<div class="hidden-xs text-right">@entry.Gems</div>
						<div class="hidden-xs text-right">@(entry.Accuracy.ToString("0.00%"))</div>
						<div class="hidden-xs text-center" style="@deathStyle">@death.Name</div>
						<div class="hidden-xs hidden-sm hidden-md text-right">@entry.EnemiesAlive</div>
						<div class="hidden-xs hidden-sm hidden-md text-right">@entry.Homing</div>
						<div class="hidden-xs hidden-sm hidden-md text-right">@entry.LevelUpTime2</div>
						<div class="hidden-xs hidden-sm hidden-md text-right">@entry.LevelUpTime3</div>
						<div class="hidden-xs hidden-sm hidden-md text-right">@entry.LevelUpTime4</div>
						<div class="hidden-xs hidden-sm hidden-md text-right">@entry.SubmitDate</div>
					</div>
					<div class="leaderboard-expand flex-container" id="@(entry.Rank)-expand">
						<div class="visible-xs">
							<div class="text-left">Kills</div>
							<div class="text-right">@entry.Kills</div>
						</div>
						<div class="visible-xs">
							<div class="text-left">Gems</div>
							<div class="text-right">@entry.Gems</div>
						</div>
						<div class="visible-xs">
							<div class="text-left">Accuracy</div>
							<div class="text-right">@(entry.Accuracy.ToString("0.00%"))</div>
						</div>
						<div class="visible-xs">
							<div class="text-left">Death type</div>
							<div class="text-right" style="@deathStyle">@death.Name</div>
						</div>
						<div class="visible-xs visible-sm visible-md">
							<div class="text-left">Enemies alive</div>
							<div class="text-right">@entry.EnemiesAlive</div>
						</div>
					</div>
				</div>
			}
		}
	</div>
</div>