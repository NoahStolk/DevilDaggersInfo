@page
@model DevilDaggersWebsite.Pages.LeaderboardModel
@{
	ViewData["Title"] = "Devil Daggers - Leaderboard";

	double timeGlobal = ((double)Model.Leaderboard.TimeGlobal / 10000.0);
	double accuracyGlobal = Model.Leaderboard.ShotsFiredGlobal == 0 ? 0 : (double)Model.Leaderboard.ShotsHitGlobal / (double)Model.Leaderboard.ShotsFiredGlobal * 100;

	int[] widths = new int[12] { 32, 256, 128, 64, 64, 192, 128, 192, 128, 128, 128, 128 };
}
@using DevilDaggersWebsite.Extensions
@using DevilDaggersWebsite.Models.Game
@using DevilDaggersWebsite.Models.Leaderboard

<header>
	<h1>Leaderboard</h1>
</header>

<main role="main">
	<div class="hidden-xs">
		<div class="flex-container flex-center flex-space-evenly">
			<div>
				<div class="text-center">Total players</div>
				<div class="text-center devil">@Model.Leaderboard.Players</div>
			</div>
		</div>
		<div class="flex-container flex-center flex-space-evenly">
			<div>
				<div class="text-center">Global time</div>
				<div class="text-center devil">@string.Format("{0:0.0000}", timeGlobal)</div>
			</div>
			<div>
				<div class="text-center">Global kills</div>
				<div class="text-center devil">@Model.Leaderboard.KillsGlobal</div>
			</div>
			<div>
				<div class="text-center">Global gems</div>
				<div class="text-center devil">@Model.Leaderboard.GemsGlobal</div>
			</div>
			<div>
				<div class="text-center">Global deaths</div>
				<div class="text-center devil">@Model.Leaderboard.DeathsGlobal</div>
			</div>
			<div>
				<div class="text-center">Global accuracy</div>
				<div class="text-center devil">@string.Format("{0:0.0000}%", accuracyGlobal)</div>
			</div>
		</div>
	</div>
	<div class="visible-xs">
		<div class="flex-container flex-center">
			<div>
				<div class="text-center">Total players</div>
				<div class="text-center">Global time</div>
				<div class="text-center">Global kills</div>
				<div class="text-center">Global gems</div>
				<div class="text-center">Global deaths</div>
				<div class="text-center">Global accuracy</div>
			</div>
			<div>
				<div class="text-center devil">@Model.Leaderboard.Players</div>
				<div class="text-center devil">@string.Format("{0:0.0000}", timeGlobal)</div>
				<div class="text-center devil">@Model.Leaderboard.KillsGlobal</div>
				<div class="text-center devil">@Model.Leaderboard.GemsGlobal</div>
				<div class="text-center devil">@Model.Leaderboard.DeathsGlobal</div>
				<div class="text-center devil">@string.Format("{0:0.0000}%", accuracyGlobal)</div>
			</div>
		</div>
	</div>
	<div>
		@using (Html.BeginForm("Leaderboard", "Home", FormMethod.Post))
		{
			@Html.AntiForgeryToken()
			<fieldset>
				@Html.TextBoxFor(m => m.Leaderboard.Offset, new { @class = "input" })
				@Html.Hidden("OffsetPrevious", Model.Leaderboard.OffsetPrevious)
				<input class="button" type="submit" name="submitAction" value="Show" />
				<input class="button" type="submit" name="submitAction" value="<" />
				<input class="button" type="submit" name="submitAction" value=">" />
			</fieldset>
		}
		<p class="text-center">
			Showing rank @(Model.Leaderboard.Offset) - @(Model.Leaderboard.Offset + 99)
		</p>
		<p class="text-center">
			Click the table headers to sort the leaderboard.
		</p>
	</div>
	<div class="flex-container flex-center flex-column">
		<div class="flex-container">
			<div style="width: @(widths[0])px;">#</div>
			<div style="width: @(widths[1])px;">Username</div>
			<div style="width: @(widths[2])px;">Time</div>
			<div style="width: @(widths[3])px;">Kills</div>
			<div style="width: @(widths[4])px;">Gems</div>
			<div style="width: @(widths[5])px;">Death type</div>
			<div style="width: @(widths[6])px;">Accuracy</div>
			<div style="width: @(widths[7])px;">Total time</div>
			<div style="width: @(widths[8])px;">Total kills</div>
			<div style="width: @(widths[9])px;">Total gems</div>
			<div style="width: @(widths[10])px;">Total deaths</div>
			<div style="width: @(widths[11])px;">Total accuracy</div>
		</div>
		@foreach (Entry entry in Model.Leaderboard.Entries)
		{
			Dagger dagger = GameHelper.Default;
			foreach (Dagger d in GameHelper.Daggers)
			{
				if (entry.Time >= d.UnlockSecond * 10000)
				{
					dagger = d;
				}
			}

			Death death = GameHelper.Fallen;
			foreach (Death d in GameHelper.Deaths)
			{
				if (entry.DeathType == d.Type)
				{
					death = d;
				}
			}

			bool admin = (UserHelper.AdminID == entry.ID);
			bool donator = (UserHelper.DonatorIDs.Contains(entry.ID));
			bool ban = (UserHelper.BanIDs.Contains(entry.ID));
			double accuracy = entry.ShotsFired == 0 ? 0 : (double)entry.ShotsHit / (double)entry.ShotsFired * 100;
			double accuracyTotal = entry.ShotsFiredTotal == 0 ? 0 : (double)entry.ShotsHitTotal / (double)entry.ShotsFiredTotal * 100;

			string role = (admin ? "admin" : ban ? "ban" : donator ? "donator" : "");
			<div class="flex-container">
				<div style="width: @(widths[0])px;" class="text-right @(ban ? "ban" : "")">@entry.Rank</div>
				<div style="width: @(widths[1])px; white-space: nowrap;" class="@(!string.IsNullOrEmpty(role) ? role : dagger.Name.ToLower()) text-left">@entry.Username</div>
				<div style="width: @(widths[2])px;" class="text-right @(!string.IsNullOrEmpty(role) ? role : dagger.Name.ToLower())">@string.Format("{0:0.0000}", (double)entry.Time / 10000)</div>
				<div style="width: @(widths[3])px;" class="text-right @(ban ? "ban" : "")">@entry.Kills</div>
				<div style="width: @(widths[4])px;" class="text-right @(ban ? "ban" : "")">@entry.Gems</div>
				<div style="width: @(widths[5])px;" class="text-center @(ban ? "ban" : death.Name.ToLower())">@death.Name</div>
				<div style="width: @(widths[6])px;" class="text-right @(ban ? "ban" : "")">@string.Format("{0:0.0000}%", accuracy)</div>
				<div style="width: @(widths[7])px;" class="text-right @(ban ? "ban" : "")">@string.Format("{0:0.0000}", (double)entry.TimeTotal / 10000)</div>
				<div style="width: @(widths[8])px;" class="text-right @(ban ? "ban" : "")">@entry.KillsTotal</div>
				<div style="width: @(widths[9])px;" class="text-right @(ban ? "ban" : "")">@entry.GemsTotal</div>
				<div style="width: @(widths[10])px;" class="text-right @(ban ? "ban" : "")">@entry.DeathsTotal</div>
				<div style="width: @(widths[11])px;" class="text-right @(ban ? "ban" : "")">@string.Format("{0:0.0000}%", accuracyTotal)</div>
			</div>
		}
	</div>
</main>