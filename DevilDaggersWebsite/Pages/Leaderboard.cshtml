@page
@inject CoreBase.Services.ICommonObjects CommonObjects
@model DevilDaggersWebsite.Pages.LeaderboardModel
@{
	ViewData["Title"] = "Leaderboard";

	int[] widths = new int[2] { 160, 160 };
}

<header>
	<h1>@ViewData["Title"]</h1>
</header>

<main role="main" class="text-center">
	<p>
		<a asp-page="/LeaderboardHistory">Top 100 history</a>
	</p>

	@await Html.PartialAsync("Partials/_LeaderboardGlobalPartial")
	<div>
		@using (Html.BeginForm(FormMethod.Post))
		{
			@Html.AntiForgeryToken()
			<fieldset>
				<div class="flex-container flex-center flex-column">
					<div class="flex-container flex-center">
						<div class="input-label text-left" style="width: @(widths[0])px;">Rank:</div>
						<div style="width: @(widths[1])px;">@Html.TextBoxFor(m => m.Leaderboard.Offset, new { @class = "input" })</div>
					</div>
					<div class="flex-container flex-center">
						<div class="input-label text-left" style="width: @(widths[0])px;">User search:</div>
						<div style="width: @(widths[1])px;">@Html.TextBoxFor(m => m.Leaderboard.Search, new { @class = "input" })</div>
					</div>
				</div>
				<input type="hidden" name="offsetPrevious" value="@Model.Leaderboard.OffsetPrevious" />

				<div class="flex-container flex-center flex-column">
					<div class="flex-container flex-center">
						<input class="btn" type="submit" name="submitAction" value="Show" />
					</div>
					<div class="flex-container flex-center leaderboard-nav-buttons">
						@{
							if (Model.Leaderboard.IsUserSearch)
							{
								<button class="btn btn-disabled">&lt;</button>
								<button class="btn btn-disabled">&gt;</button>
							}
							else
							{
								<input class="btn" type="submit" name="submitAction" value="<" />
								<input class="btn" type="submit" name="submitAction" value=">" />
							}
						}
					</div>
				</div>
			</fieldset>
		}
		<p>
			@{
				if (Model.Leaderboard.IsUserSearch)
				{
					@:Showing results for "@(Model.Leaderboard.Search)"
				}
				else
				{
					@:Showing rank @(Model.Leaderboard.Offset) - @(Model.Leaderboard.Offset + 99)
				}
			}
		</p>
		<p class="visible-xs visible-sm visible-md">
			On mobile devices; tap on an entry to expand it.
		</p>
	</div>
	@await Html.PartialAsync("Partials/_LeaderboardUserPartial")
</main>