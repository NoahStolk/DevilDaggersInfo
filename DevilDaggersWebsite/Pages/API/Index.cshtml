@page
@model DevilDaggersWebsite.Pages.API.IndexModel
@using DevilDaggersWebsite.Code.API
@using DevilDaggersWebsite.Code.Utils
@using DevilDaggersCore.Game
@using System.Reflection
@{
	ViewData["Title"] = "API Overview";
}

<h1>@ViewData["Title"]</h1>

<main role="main">
	<p class="text-center">
		This is the main page for the API for DevilDaggers.info.
		All API functions currently available can be found here.
	</p>
	<p class="text-center">
		I mainly set this up so I could easily communicate with the website through external environments, such as within <a asp-page="/Tools/DevilDaggersSurvivalEditor">DevilDaggersSurvivalEditor</a>.
		However, this is a public API; feel free to use it for any tool or application you've made yourself.
		I'd also be happy to implement more functions should anyone need it, so let me know if you have any requests.
	</p>
	<p class="text-center">
		This table is automatically generated and will always be up to date.
	</p>

	<h2>List of functions</h2>
	<div class="api-list">
		<div class="row text-bold">
			<div class="col-lg-2 col-md-2 col-sm-3 col-xs-3">Name</div>
			<div class="col-lg-4 col-md-6 col-sm-9 col-xs-9">Description</div>
			<div class="col-lg-2 col-md-2 hidden-sm hidden-xs">Return type</div>
			<div class="col-lg-2 col-md-2 hidden-sm hidden-xs">Parameters</div>
			<div class="col-lg-2 hidden-md hidden-sm hidden-xs">Optional parameters</div>
		</div>

		@{
			List<ApiFunction> allFunctions = Model.ApiFunctions.Concat(Model.ApiFunctionsDeprecated).ToList();
			int i = 0;
			foreach (ApiFunction api in allFunctions)
			{
				List<string> parameters = new List<string>();
				List<string> optionalParameters = new List<string>();
				foreach (ParameterInfo pInfo in api.Parameters)
				{
					Type underlyingType = Nullable.GetUnderlyingType(pInfo.ParameterType);
					string type = underlyingType != null ? $"Nullable&lt;{underlyingType.Name}&gt;" : pInfo.ParameterType.Name;
					if (pInfo.IsOptional)
					{
						optionalParameters.Add($"<span class='api-parameter-optional'>{pInfo.Name}</span> (<span class='api-parameter-type'>{type}</span>)");
					}
					else
					{
						parameters.Add($"<span class='api-parameter'>{pInfo.Name}</span> (<span class='api-parameter-type'>{type}</span>)");
					}
				}
				<div class="row" style="@(i % 2 == 0 ? "background-color: #111;" : "")">
					<div class="col-lg-2 col-md-2 col-sm-3 col-xs-3"><a asp-page=@api.Name class="dont-break-out">@api.Name</a></div>
					<div class="col-lg-4 col-md-6 col-sm-9 col-xs-9">@api.FormattedDescription</div>
					<div class="col-lg-2 col-md-2 hidden-sm hidden-xs">@api.Attribute.ReturnType</div>
					<div class="col-lg-2 col-md-2 hidden-sm hidden-xs">@(parameters.Count != 0 ? Html.Raw(string.Join(", ", parameters)) : RazorUtils.NAString)</div>
					<div class="col-lg-2 hidden-md hidden-sm hidden-xs">@(optionalParameters.Count != 0 ? Html.Raw(string.Join(", ", optionalParameters)) : RazorUtils.NAString)</div>
				</div>
				i++;
			}
		}
	</div>

	<h2>Examples</h2>
	<div class="api-list">
		<div class="row text-bold">
			<div class="col-xs-4">
				Example
			</div>
			<div class="col-xs-8">
				Result
			</div>
		</div>
		<div class="row" style="background-color: #111;">
			<div class="col-xs-4">
				<a asp-page="GetSpawnsets" asp-route-searchAuthor="Sorath" asp-route-searchName="V" class="dont-break-out">API/GetSpawnsets?searchAuthor=Sorath&searchName=V</a>
			</div>
			<div class="col-xs-8">
				Returns the result(s) for every spawnset that contains "Sorath" in the spawnset's author and "V" in the spawnset's name.
			</div>
		</div>
		<div class="row">
			<div class="col-xs-4">
				<a asp-page="GetDeaths" asp-route-deathType="10" asp-route-formatted="true" class="dont-break-out">API/GetDeaths?deathType=10&formatted=true</a>
			</div>
			<div class="col-xs-8">
				Returns the Death object for the deathType 10 which is <span style='color: #@GameInfo.V3.Annihilated.ColorCode'>@GameInfo.V3.Annihilated.Name</span>, and also formats the JSON.
			</div>
		</div>
		<div class="row" style="background-color: #111;">
			<div class="col-xs-4">
				<a asp-page="GetSpawnset" asp-route-fileName="V3_Sorath" class="dont-break-out">API/GetSpawnset?fileName=V3_Sorath</a>
			</div>
			<div class="col-xs-8">
				Returns the spawnset with the name "V3_Sorath".
			</div>
		</div>
		<div class="row">
			<div class="col-xs-4">
				<a asp-page="GetEnemies" asp-route-gameVersion="V2" class="dont-break-out">API/GetEnemies?gameVersion=V2</a>
			</div>
			<div class="col-xs-8">
				Returns all Enemy objects found in V2.
			</div>
		</div>
	</div>
</main>

@section Styles {
	<link rel='stylesheet' href='~/styles/api.css' />
}