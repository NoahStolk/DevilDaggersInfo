@page
@using DevilDaggersWebsite.Code.Database.CustomLeaderboards
@using DevilDaggersWebsite.Code.Spawnsets
@using DevilDaggersWebsite.Code.Utils
@using System.Linq
@model DevilDaggersWebsite.Pages.CustomLeaderboards.IndexModel
@{
	ViewData["Title"] = "Custom Leaderboards";
}

<header>
	<h1>@ViewData["Title"]</h1>
</header>

<main role="main">
	<p class="text-center">
		Custom leaderboards are leaderboards for <a asp-page="/Spawnsets">custom spawnsets</a> hosted by DevilDaggers.info. They are still in development.
	</p>

	<table>
		<thead>
			<tr>
				<th width="300">
					Spawnset name
				</th>
				<th width="300">
					Spawnset author
				</th>
				<th width="100">
					Players
				</th>
				<th width="100">
					Bronze
				</th>
				<th width="100">
					Silver
				</th>
				<th width="100">
					Golden
				</th>
				<th width="100">
					Devil
				</th>
			</tr>
		</thead>
		<tbody>
			@{
				foreach (CustomLeaderboard lb in Model.Leaderboards)
				{
					string fileName = lb.SpawnsetFileName;
					string name = SpawnsetFile.GetName(fileName);
					string author = SpawnsetFile.GetAuthor(fileName);
					<tr>
						<td class="text-left">
							<a asp-page="/CustomLeaderboards/Leaderboard" asp-route-spawnset="@fileName">@name</a>
						</td>
						<td class="text-left">
							<a asp-page="/Spawnsets" asp-route-SearchAuthor="@author">@author</a>
						</td>
						<td class="text-right">
							@Model.Entries.Where(e => e.CustomLeaderboardID == lb.ID).Count()
						</td>
						<td class="text-right bronze">
							@lb.Bronze.ToString("0.0000")
						</td>
						<td class="text-right silver">
							@lb.Silver.ToString("0.0000")
						</td>
						<td class="text-right golden">
							@lb.Golden.ToString("0.0000")
						</td>
						<td class="text-right devil">
							@lb.Devil.ToString("0.0000")
						</td>
					</tr>
				}
			}
		</tbody>
	</table>

	<h2>FAQ</h2>
	<div class="faq-question">How do I participate?</div>
	<div class="faq-answer">
		You will need the Devil Daggers Custom Leaderboards program, also known as <a asp-page="/Tools/DevilDaggersCustomLeaderboards">DDCL</a>.<br />
		The program is not publicly available for download yet, but if you'd like to test, let me know on <a href="@RazorUtils.DiscordUrl">Discord</a>. Testing is much appreciated, as it helps me a lot making the program more stable.
	</div>

	<div class="faq-question">How does it work?</div>
	<div class="faq-answer">
		The program constantly scans the 'dd.exe' process for certain values stored in memory.<br />
		It can detect a bunch of values, as well as which spawnset you're playing.<br />
		When the player dies, it uploads those values to a leaderboard based on the spawnset.<br />
		Sounds easy? It's actually pretty complicated, scanning another process's memory is not really a common task for an application. This is why DDCL might sometimes be unstable.<br />
		Testing helps me a lot, I'd like to thank everyone who helped testing DDCL, and I'd especially like to thank Bintr for helping me figure out and explaining how to do this in the first place.
	</div>

	<div class="faq-question">Source code?</div>
	<div class="faq-answer">
		Unfortunately I cannot share the source code since it would allow people to cheat the leaderboards.
	</div>
</main>