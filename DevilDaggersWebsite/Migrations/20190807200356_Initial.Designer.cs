// <auto-generated />
using System;
using DevilDaggersWebsite.Code.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevilDaggersWebsite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190807200356_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DevilDaggersWebsite.Code.Database.CustomLeaderboards.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ascending");

                    b.Property<string>("LayoutPartialName");

                    b.Property<string>("Name");

                    b.Property<string>("SortingPropertyName");

                    b.HasKey("ID");

                    b.ToTable("CustomLeaderboardCategories");
                });

            modelBuilder.Entity("DevilDaggersWebsite.Code.Database.CustomLeaderboards.CustomEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientVersion");

                    b.Property<int>("CustomLeaderboardID");

                    b.Property<int>("DeathType");

                    b.Property<int>("EnemiesAlive");

                    b.Property<int>("Gems");

                    b.Property<int>("Homing");

                    b.Property<int>("Kills");

                    b.Property<float>("LevelUpTime2");

                    b.Property<float>("LevelUpTime3");

                    b.Property<float>("LevelUpTime4");

                    b.Property<int>("PlayerID");

                    b.Property<int>("ShotsFired");

                    b.Property<int>("ShotsHit");

                    b.Property<DateTime>("SubmitDate");

                    b.Property<float>("Time");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.HasIndex("CustomLeaderboardID");

                    b.ToTable("CustomEntries");
                });

            modelBuilder.Entity("DevilDaggersWebsite.Code.Database.CustomLeaderboards.CustomLeaderboard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Bronze");

                    b.Property<int>("CategoryID");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateLastPlayed");

                    b.Property<float>("Devil");

                    b.Property<float>("Golden");

                    b.Property<float>("Homing");

                    b.Property<float>("Silver");

                    b.Property<string>("SpawnsetFileName");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("CustomLeaderboards");
                });

            modelBuilder.Entity("DevilDaggersWebsite.Code.Database.CustomLeaderboards.CustomEntry", b =>
                {
                    b.HasOne("DevilDaggersWebsite.Code.Database.CustomLeaderboards.CustomLeaderboard", "CustomLeaderboard")
                        .WithMany()
                        .HasForeignKey("CustomLeaderboardID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DevilDaggersWebsite.Code.Database.CustomLeaderboards.CustomLeaderboard", b =>
                {
                    b.HasOne("DevilDaggersWebsite.Code.Database.CustomLeaderboards.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
