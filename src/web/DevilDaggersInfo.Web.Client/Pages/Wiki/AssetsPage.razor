@page "/wiki/assets"
@using DevilDaggersInfo.Core.Asset
@using System.Runtime.CompilerServices
@inject PublicApiHttpClient Http
@inject NavigationManager NavigationManager

<Heading Title="Game Assets" />

<p class="para">
	This page lists all the game's assets. Assets can be extracted and modified using <a class="link" href="tools/asset-editor">Devil Daggers Asset Editor</a>.
</p>

<Heading Title="Audio Assets" Level="2" />
<div class="bg-gray-3 grid gap-3 grid-cols-3">
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _audioAudio, _audioAudioSortings, (aad) => aad.AssetName)">Asset</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _audioAudio, _audioAudioSortings, (aad) => aad.IsProhibited)">Prohibited</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _audioAudio, _audioAudioSortings, (aad) => aad.DefaultLoudness)">Loudness</a></div>
</div>
@foreach (AudioAssetData audio in _audioAudio)
{
	<div class="grid gap-3 grid-cols-3 odd:bg-gray-2">
		<div class="break-all">@audio.AssetName</div>
		<div>@(audio.IsProhibited ? "Yes" : "No")</div>
		<div>@(audio.PresentInDefaultLoudness ? audio.DefaultLoudness.ToString("0.0") : "N/A (1.0)")</div>
	</div>
}

<Heading Title="Mesh Assets" Level="2" />
<div class="bg-gray-3 grid gap-3 grid-cols-4">
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddMeshes, _ddMeshesSortings, (mad) => mad.AssetName)">Asset</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddMeshes, _ddMeshesSortings, (mad) => mad.IsProhibited)">Prohibited</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddMeshes, _ddMeshesSortings, (mad) => mad.DefaultIndexCount)">Indices</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddMeshes, _ddMeshesSortings, (mad) => mad.DefaultVertexCount)">Vertices</a></div>
</div>
@foreach (MeshAssetData mesh in _ddMeshes)
{
	<div class="grid gap-3 grid-cols-4 odd:bg-gray-2">
		<div class="break-all">@mesh.AssetName</div>
		<div>@(mesh.IsProhibited ? "Yes" : "No")</div>
		<div>@mesh.DefaultIndexCount</div>
		<div>@mesh.DefaultVertexCount</div>
	</div>
}

<Heading Title="Object Binding Assets" Level="2" />
<div class="bg-gray-3 grid gap-3 grid-cols-2">
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddObjectBindings, _ddObjectBindingsSortings, (mbad) => mbad.AssetName)">Asset</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddObjectBindings, _ddObjectBindingsSortings, (mbad) => mbad.IsProhibited)">Prohibited</a></div>
</div>
@foreach (ObjectBindingAssetData objectBinding in _ddObjectBindings)
{
	<div class="grid gap-3 grid-cols-2 odd:bg-gray-2">
		<div class="break-all">@objectBinding.AssetName</div>
		<div>@(objectBinding.IsProhibited ? "Yes" : "No")</div>
	</div>
}

<Heading Title="Shader Assets (core)" Level="2" />
<div class="bg-gray-3 grid gap-3 grid-cols-2">
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _coreShaders, _coreShadersSortings, (sad) => sad.AssetName)">Asset</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _coreShaders, _coreShadersSortings, (sad) => sad.IsProhibited)">Prohibited</a></div>
</div>
@foreach (ShaderAssetData shader in _coreShaders)
{
	<div class="grid gap-3 grid-cols-2 odd:bg-gray-2">
		<div class="break-all">@shader.AssetName</div>
		<div>@(shader.IsProhibited ? "Yes" : "No")</div>
	</div>
}

<Heading Title="Shader Assets (dd)" Level="2" />
<div class="bg-gray-3 grid gap-3 grid-cols-2">
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddShaders, _ddShadersSortings, (sad) => sad.AssetName)">Asset</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddShaders, _ddShadersSortings, (sad) => sad.IsProhibited)">Prohibited</a></div>
</div>
@foreach (ShaderAssetData shader in _ddShaders)
{
	<div class="grid gap-3 grid-cols-2 odd:bg-gray-2">
		<div class="break-all">@shader.AssetName</div>
		<div>@(shader.IsProhibited ? "Yes" : "No")</div>
	</div>
}

<Heading Title="Texture Assets" Level="2" />
<div class="bg-gray-3 grid gap-3 grid-cols-6">
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddTextures, _ddTexturesSortings, (tad) => tad.AssetName)">Asset</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddTextures, _ddTexturesSortings, (tad) => tad.IsProhibited)">Prohibited</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddTextures, _ddTexturesSortings, (tad) => tad.DefaultWidth)">Width</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddTextures, _ddTexturesSortings, (tad) => tad.DefaultHeight)">Height</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddTextures, _ddTexturesSortings, (tad) => tad.IsTextureForMesh)">For mesh</a></div>
	<div><a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(ref _ddTextures, _ddTexturesSortings, (tad) => tad.ObjectBinding)">Object binding</a></div>
</div>
@foreach (TextureAssetData texture in _ddTextures)
{
	<div class="grid gap-3 grid-cols-6 odd:bg-gray-2">
		<div class="break-all">@texture.AssetName</div>
		<div>@(texture.IsProhibited ? "Yes" : "No")</div>
		<div>@texture.DefaultWidth</div>
		<div>@texture.DefaultHeight</div>
		<div>@(texture.IsTextureForMesh ? "Yes" : "No")</div>
		<div class="break-all">@texture.ObjectBinding</div>
	</div>
}

@code
{
	private List<AudioAssetData> _audioAudio = AudioAudio.All;
	private List<MeshAssetData> _ddMeshes = DdMeshes.All;
	private List<ObjectBindingAssetData> _ddObjectBindings = DdObjectBindings.All;
	private List<ShaderAssetData> _coreShaders = CoreShaders.All;
	private List<ShaderAssetData> _ddShaders = DdShaders.All;
	private List<TextureAssetData> _ddTextures = DdTextures.All;
	
	private Dictionary<string, bool> _audioAudioSortings = new();
	private Dictionary<string, bool> _ddMeshesSortings = new();
	private Dictionary<string, bool> _ddObjectBindingsSortings = new();
	private Dictionary<string, bool> _coreShadersSortings = new();
	private Dictionary<string, bool> _ddShadersSortings = new();
	private Dictionary<string, bool> _ddTexturesSortings = new();

	private void Sort<TSource, TKey>(ref List<TSource> source, Dictionary<string, bool> sortings, Func<TSource, TKey> sorting, [CallerArgumentExpression("sorting")] string sortingExpression = "")
	{
		bool sortDirection = false;
		if (sortings.ContainsKey(sortingExpression))
			sortDirection = sortings[sortingExpression];
		else
			sortings.Add(sortingExpression, false);

		source = source.OrderBy(sorting, sortDirection).ToList();

		sortings[sortingExpression] = !sortDirection;
	}
}
