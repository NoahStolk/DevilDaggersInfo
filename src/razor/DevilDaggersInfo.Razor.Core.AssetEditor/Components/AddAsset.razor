@using DevilDaggersInfo.Core.Asset
@using DevilDaggersInfo.Core.Asset.Enums
@using DevilDaggersInfo.Core.Mod
@using DevilDaggersInfo.Core.Mod.Enums

<h1>Add new asset</h1>

<button class="btn btn-red btn-large w-32 h-8 mb-2" @onclick="Cancel">Cancel</button>

@if (Editor.Binary.ModBinaryType == ModBinaryType.Dd)
{
	<div class="grid gap-x-2 grid-cols-4">
		@foreach (AssetType assetType in Enum.GetValues<AssetType>())
		{
			if (!ModBinary.IsAssetTypeValid(ModBinaryType.Dd, assetType))
				continue;

			string bgColor = BinaryEditor.GetBgColor(assetType);
			<div><button class="btn btn-large w-full h-16 bg-opacity-20 hover:bg-opacity-70 @(_selectedAssetType == assetType ? "bg-opacity-50" : null) @bgColor" @onclick="() => SelectAssetType(assetType)">@assetType.ToDisplayString()</button></div>
		}
	</div>
}

@if (_selectedAssetType.HasValue)
{
	<div class="flex p-2">
		<div class="flex-shrink pr-2">Search:</div>
		<input type="text" class="input-text flex-grow" @bind-value="_assetNameSearch" @bind-value:event="oninput" />
	</div>
	<div class="h-screen-35 max-h-screen-35 overflow-y-scroll mb-2">
		@foreach (AssetInfo asset in GetFilteredAssets())
		{
			<div class="bg-opacity-10 hover:bg-opacity-50 @(asset.AssetName == _selectedAssetName ? "font-bold bg-opacity-30" : null) @(BinaryEditor.GetBgColor(_selectedAssetType.Value)) grid gap-x-2 grid-cols-2 px-1 cursor-pointer" @onclick="() => Select(asset.AssetName)">
				<div>@asset.AssetName</div>
				<div>@(asset.IsProhibited ? "Prohibited" : null)</div>
			</div>
		}
	</div>

	@if (_selectedAssetName == null)
	{
		<div class="pl-1">Select an asset from the list above.</div>
	}
	else
	{
		@if (_selectedAssetType.Value == AssetType.Shader)
		{
			<button class="btn btn-large w-32 h-8 bg-opacity-30 hover:bg-opacity-50 bg-shader" @onclick="() => Open(AssetType.Shader)">Select .vert file</button>
			<button class="btn btn-large w-32 h-8 bg-opacity-30 hover:bg-opacity-50 bg-shader" @onclick="() => Open(AssetType.Shader)">Select .frag file</button>
		}
		else
		{
			<button class="btn btn-large w-32 h-8 bg-opacity-30 hover:bg-opacity-50 @BinaryEditor.GetBgColor(_selectedAssetType.Value)" @onclick="() => Open(_selectedAssetType.Value)">Select @(_selectedAssetType.Value.GetFileExtension()) file</button>
		}

		if (_selectedFileName != null)
		{
			<p>@_selectedFileName will be assigned to <span class="@BinaryEditor.GetTextColor(_selectedAssetType.Value)">@(_selectedAssetName)</span>.</p>
			<button class="btn btn-green btn-large w-32 h-8" @onclick="WriteToBinary">Add to binary</button>
		}
	}
}
