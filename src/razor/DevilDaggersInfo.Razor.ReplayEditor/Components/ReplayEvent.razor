@using DevilDaggersInfo.Core.Replay.Enums
@using DevilDaggersInfo.Core.Replay.Events
@using DevilDaggersInfo.Core.Wiki.Structs
@using DevilDaggersInfo.Razor.ReplayEditor.Extensions
@using DevilDaggersInfo.Razor.ReplayEditor.Store.State
@using Fluxor
@inject IState<ReplayBinaryState> ReplayBinaryState

@if (Event is EntityTargetEvent entityTargetEvent)
{
	<div class="grid grid-cols-3 max-w-xl">
		<span class="font-bold">Entity ID</span>
		<span class="font-bold">Entity type</span>
		<span class="font-bold">Target position</span>
		<span>@entityTargetEvent.EntityId</span>
		@EntityType(entityTargetEvent.EntityId, ReplayBinaryState.Value.ReplayBinary.EntityTypes)
		<span>@entityTargetEvent.TargetPosition</span>
	</div>
}
else if (Event is EntityPositionEvent entityPositionEvent)
{
	<div class="grid grid-cols-3 max-w-xl">
		<span class="font-bold">Entity ID</span>
		<span class="font-bold">Entity type</span>
		<span class="font-bold">Position</span>
		<span>@entityPositionEvent.EntityId</span>
		@EntityType(entityPositionEvent.EntityId, ReplayBinaryState.Value.ReplayBinary.EntityTypes)
		<span>@entityPositionEvent.Position</span>
	</div>
}
else if (Event is EntityOrientationEvent entityOrientationEvent)
{
	<div class="grid grid-cols-3 max-w-xl">
		<span class="font-bold">Entity ID</span>
		<span class="font-bold">Entity type</span>
		<span class="font-bold">Orientation</span>
		<span>@entityOrientationEvent.EntityId</span>
		@EntityType(entityOrientationEvent.EntityId, ReplayBinaryState.Value.ReplayBinary.EntityTypes)
		<span>@entityOrientationEvent.Orientation</span>
	</div>
}
else if (Event is DeathEvent deathEvent)
{
	<div class="grid grid-cols-1 max-w-xl">
		<span class="font-bold">Death type</span>
		<span>@deathEvent.DeathType</span>
	</div>
}
else
{
	<span>@Event.ToString()</span>
}

@code
{
	[Parameter]
	[EditorRequired]
	public IEvent Event { get; set; } = null!;

	private static MarkupString EntityType(int entityId, List<EntityType> entityTypes)
	{
		EntityType entityType = entityTypes[entityId];
		Color color = entityType.GetColor();
		return new($"<span style='color: {color.HexCode};'>{entityType.ToDisplayString()}</span>");
	}
}
