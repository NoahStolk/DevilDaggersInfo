@page "/leaderboard/player/{Id:int}"
@using DevilDaggersInfo.Web.BlazorWasm.Client.Components.Leaderboards.Player
@using DevilDaggersInfo.Web.BlazorWasm.Client.Core.CanvasChart.Components
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Public.Mods
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Public.Spawnsets
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums

@if (GetEntry == null)
{
	<Loading />
}
else
{
	<Heading Title="@($"Player - {GetEntry.Username}")" BreakAll="true" />

	<a class="link" href="@($"/leaderboard?Rank={_pageRankStart}")">Back to leaderboard (@_pageRankStart - @_pageRankEnd)</a>
	<Paragraph>@GetEntry.Username is currently rank @GetEntry.Rank.</Paragraph>
	<div class="grid gap-2 grid-cols-1 md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-5">
		<PlayerCard Title="Personal Best">
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Time">@MarkupUtils.LeaderboardTime(GetEntry.Time)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Kills">@GetEntry.Kills.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Gems">@GetEntry.Gems.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Accuracy">@((GetEntry.DaggersHit / (float)GetEntry.DaggersFired).ToString(FormatUtils.AccuracyFormat))</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Daggers hit">@GetEntry.DaggersHit.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Daggers fired">@GetEntry.DaggersFired.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Death type">@MarkupUtils.DeathString(GetEntry.DeathType)</DataField>
		</PlayerCard>

		<PlayerCard Title="Total Statistics">
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Total time">@GetEntry.TimeTotal.ToString(FormatUtils.LeaderboardGlobalTimeFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Total kills">@GetEntry.KillsTotal.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Total gems">@GetEntry.GemsTotal.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Total accuracy">@((GetEntry.DaggersHitTotal / (float)GetEntry.DaggersFiredTotal).ToString(FormatUtils.AccuracyFormat))</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Total daggers hit">@GetEntry.DaggersHitTotal.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Total daggers fired">@GetEntry.DaggersFiredTotal.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
			<DataField CssClass="odd:bg-gray-2 px-1" Name="Total deaths">@GetEntry.DeathsTotal.ToString(FormatUtils.LeaderboardIntFormat)</DataField>
		</PlayerCard>

		@if (GetEntry.DeathsTotal > 0)
		{
			float deathsAsFloat = (float)GetEntry.DeathsTotal;

			<PlayerCard Title="Average Statistics">
				<DataField CssClass="odd:bg-gray-2 px-1" Name="Average time">@((GetEntry.TimeTotal / deathsAsFloat).ToString(FormatUtils.TimeFormat))</DataField>
				<DataField CssClass="odd:bg-gray-2 px-1" Name="Average kills">@((GetEntry.KillsTotal / deathsAsFloat).ToString(FormatUtils.LeaderboardIntAverageFormat))</DataField>
				<DataField CssClass="odd:bg-gray-2 px-1" Name="Average gems">@((GetEntry.GemsTotal / deathsAsFloat).ToString(FormatUtils.LeaderboardIntAverageFormat))</DataField>
				<DataField CssClass="odd:bg-gray-2 px-1" Name="Average daggers hit">@((GetEntry.DaggersHitTotal / deathsAsFloat).ToString(FormatUtils.LeaderboardIntAverageFormat))</DataField>
				<DataField CssClass="odd:bg-gray-2 px-1" Name="Average daggers fired">@((GetEntry.DaggersFiredTotal / deathsAsFloat).ToString(FormatUtils.LeaderboardIntAverageFormat))</DataField>
			</PlayerCard>
		}

		@if (GetPlayer == null)
		{
			@if (!PlayerNotFound)
			{
				<Loading />
			}
		}
		else
		{
			@*TODO: custom entries*@

			if (GetPlayer.Settings != null)
			{
				bool? rightHand = GetPlayer.Settings.IsRightHanded;
				bool? flashHand = GetPlayer.Settings.UsesFlashHand;
				bool? legacyAudio = GetPlayer.Settings.UsesLegacyAudio;

				<PlayerCard Title="Settings">
					@if (GetPlayer.Settings.Edpi.HasValue)
					{
						<DataField CssClass="odd:bg-gray-2 px-1" Name="eDPI">@(GetPlayer.Settings.Edpi.Value.ToString(FormatUtils.InGameSensFormat))</DataField>
					}

					@if (GetPlayer.Settings.Dpi.HasValue)
					{
						<DataField CssClass="odd:bg-gray-2 px-1" Name="DPI">@(GetPlayer.Settings.Dpi.Value.ToString())</DataField>
					}

					@if (GetPlayer.Settings.InGameSens.HasValue)
					{
						<DataField CssClass="odd:bg-gray-2 px-1" Name="In-game sens">@(GetPlayer.Settings.InGameSens.Value.ToString(FormatUtils.InGameSensFormat))</DataField>
					}

					@if (GetPlayer.Settings.Fov.HasValue)
					{
						<DataField CssClass="odd:bg-gray-2 px-1" Name="FOV">@(GetPlayer.Settings.Fov.Value.ToString())</DataField>
					}

					@if (GetPlayer.Settings.Gamma.HasValue)
					{
						<DataField CssClass="odd:bg-gray-2 px-1" Name="Gamma">@(GetPlayer.Settings.Gamma.Value.ToString(FormatUtils.GammaFormat))</DataField>
					}

					@if (rightHand.HasValue)
					{
						<DataField CssClass="odd:bg-gray-2 px-1" Name="Hand orientation">@(rightHand.Value ? "Right" : "Left")</DataField>
					}

					@if (flashHand.HasValue)
					{
						<DataField CssClass="odd:bg-gray-2 px-1" Name="Hand flash">@(flashHand.Value ? "On" : "Off")</DataField>
					}

					@if (legacyAudio.HasValue)
					{
						<DataField CssClass="odd:bg-gray-2 px-1" Name="Legacy audio">@(legacyAudio.Value ? "On" : "Off")</DataField>
					}

					@if (GetPlayer.CountryCode != null && UserUtils.CountryNames.ContainsKey(GetPlayer.CountryCode))
					{
						<TallDataField CssClass="odd:bg-gray-2 px-1" Name="Country">
							<img class="inline" src="/images/flags/@(GetPlayer.CountryCode).png" />
							@(UserUtils.CountryNames[GetPlayer.CountryCode])
						</TallDataField>
					}
				</PlayerCard>
			}
		}

		@if (GetPlayerHistory != null && GetPlayerHistory.BestRank.HasValue)
		{
			<PlayerCard Title="History">
				<DataField CssClass="odd:bg-gray-2 px-1" Name="Best rank recorded">@GetPlayerHistory.BestRank</DataField>
				@if (GetPlayerHistory.HidePastUsernames)
				{
					<DataField CssClass="odd:bg-gray-2 px-1" Name="Usernames">@MarkupUtils.HiddenMarkup</DataField>
				}
				else
				{
					<TallDataField CssClass="odd:bg-gray-2 px-1" Name="Usernames">
						@foreach (string username in GetPlayerHistory.Usernames)
						{
							<div class="even:bg-gray-2 break-all">@username</div>
						}
					</TallDataField>
				}
			</PlayerCard>
		}

		@if (GetCustomLeaderboardStatistics == null || GetNumberOfCustomLeaderboards == null)
		{
			<Loading />
		}
		else
		{
			foreach (CustomLeaderboardCategory category in Enum.GetValues<CustomLeaderboardCategory>())
			{
				var stats = GetCustomLeaderboardStatistics.FirstOrDefault(cls => cls.CustomLeaderboardCategory == category);
				if (stats == null)
					continue;

				_ = GetNumberOfCustomLeaderboards.CountPerCategory.TryGetValue(category, out int total);

				<PlayerCard Title="@($"Custom Leaderboard Statistics ({category})")">
					<DataField CssClass="odd:bg-gray-2 px-1" Name="Leviathan daggers">@stats.LeviathanDaggerCount / @total</DataField>
					<DataField CssClass="odd:bg-gray-2 px-1" Name="Devil daggers">@stats.DevilDaggerCount / @total</DataField>
					<DataField CssClass="odd:bg-gray-2 px-1" Name="Golden daggers">@stats.GoldenDaggerCount / @total</DataField>
					<DataField CssClass="odd:bg-gray-2 px-1" Name="Silver daggers">@stats.SilverDaggerCount / @total</DataField>
					<DataField CssClass="odd:bg-gray-2 px-1" Name="Bronze daggers">@stats.BronzeDaggerCount / @total</DataField>
					<DataField CssClass="odd:bg-gray-2 px-1" Name="Default daggers">@stats.DefaultDaggerCount / @total</DataField>
					<DataField CssClass="odd:bg-gray-2 px-1" Name="Played">@stats.LeaderboardsPlayedCount / @total</DataField>
				</PlayerCard>
			}
		}

		@if (GetSpawnsetNames == null)
		{
			<Loading />
		}
		else if (GetSpawnsetNames.Count > 0)
		{
			<PlayerCard Title="Spawnsets" Scroll="true">
				@foreach (GetSpawnsetName getSpawnsetName in GetSpawnsetNames)
				{
					<div class="odd:bg-gray-2 px-1">
						<a class="link" href="@($"/custom/spawnset/{getSpawnsetName.Id}")">@getSpawnsetName.Name</a>
					</div>
				}
			</PlayerCard>
		}

		@if (GetModNames == null)
		{
			<Loading />
		}
		else if (GetModNames.Count > 0)
		{
			<PlayerCard Title="Mods" Scroll="true">
				@foreach (GetModName getModName in GetModNames)
				{
					<div class="odd:bg-gray-2 px-1">
						<a class="link" href="@($"/custom/mod/{getModName.Id}")">@getModName.Name</a>
					</div>
				}
			</PlayerCard>
		}
	</div>

	if (GetPlayerHistory != null)
	{
		<Heading Title="Progression" Level="2" />
		<div class="grid grid-cols-1 2xl:grid-cols-2">
			@if (GetPlayerHistory.ScoreHistory.Count > 0)
			{
				<div>
					<Heading Title="Score" Level="3" />
					<LineChart DataOptions="_progressionScoreOptions" UniqueName="#progression-score-chart" DataSets="@_progressionScoreData" Options="_progressionScoreLineChartOptions" />
				</div>
			}

			@if (GetPlayerHistory.RankHistory.Count > 0)
			{
				<div>
					<Heading Title="Rank" Level="3" />
					<LineChart DataOptions="_progressionRankOptions" UniqueName="#progression-rank-chart" DataSets="@_progressionRankData" Options="_progressionRankLineChartOptions" />
				</div>
			}
		</div>

		<Heading Title="Activity" Level="2" />
		<div class="grid grid-cols-1 2xl:grid-cols-2">
			@if (GetPlayerHistory.ActivityHistory.Count > 0)
			{
				if (GetPlayerHistory.ActivityHistory.Any(a => a.DeathsIncrement != 0))
				{
					<div>
						<Heading Title="Deaths" Level="3" />
						<LineChart DataOptions="_activityDeathsOptions" UniqueName="#activity-deaths-chart" DataSets="@_activityDeathsData" Options="_activityDeathsLineChartOptions" />
					</div>
				}
			}
		</div>
	}
}
