@page "/authentication/login"
@inject PublicApiHttpClient Http
@inject AdminAuthenticationStateProvider Auth
@inject NavigationManager Navigation
@using DevilDaggersInfo.Web.BlazorWasm.Client.Authentication
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Public.Authentication
@using Newtonsoft.Json
@using System.Net

<Heading Title="Login" />

<EditForm Model="@Model" OnValidSubmit="@OnValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="text-red">@_serverError</div>
	
	<div class="grid gap-2 grid-cols-2 max-w-md">
		<span>Name</span>
		<input class="bg-black border-gray-3 border-2" @bind="@Model.Name" />
		<span>Password</span>
		<input class="bg-black border-gray-3 border-2" type="password" @bind="@Model.Password" />
	</div>

	<button class="btn btn-gray p-1" type="submit">Login</button>
</EditForm>

<Paragraph>
	<i>Forgot password? Ask the administrator to reset it. You can do so on Discord or by sending an email to noahstolk [at] gmail [dot] com.</i>
</Paragraph>

@code
{
	[Parameter] public LoginRequest Model { get; set; } = new();

	private string? _serverError;

	private async Task OnValidSubmit()
	{
		HttpResponseMessage httpResponseMessage = await Http.Login(Model);

		if (httpResponseMessage.StatusCode == HttpStatusCode.OK)
		{
			LoginResponse? authenticationResponse = await httpResponseMessage.Content.ReadFromJsonAsync<LoginResponse>() ?? throw new($"Could not deserialize {nameof(LoginResponse)}.");
			await Auth.SetTokenAsync(authenticationResponse.Token);
			Navigation.NavigateTo("/", true);
		}
		else
		{
			_serverError = await httpResponseMessage.Content.ReadAsStringAsync();
		}
	}
}
