@page "/wiki/enemies"
@using DevilDaggersInfo.Core.Wiki.Extensions

<Heading Title="Enemies" />

<Select @onchange="UpdateGameVersion" class="bg-gray-1 transition-colors duration-100 h-8 py-1 rounded text-color-text">
	<option value=@GameVersion.V1_0>V1</option>
	<option value=@GameVersion.V2_0>V2</option>
	<option value=@GameVersion.V3_0>V3</option>
	<option value=@GameVersion.V3_1>V3.1</option>
	<option value=@GameVersion.V3_2 selected>V3.2</option>
</Select>

<Heading Title="Details" Level="2" />

<div class="grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-6">
	@foreach (Enemy enemy in Enemies.GetEnemies(GameVersion))
	{
		string image = enemy.GetImageName();
		if (enemy == EnemiesV1_0.Gigapede || enemy == EnemiesV2_0.Gigapede)
		{
			image = $"{image}-red";
		}

		string hexColor = enemy.Color.HexCode ?? "#444";
		string hpString = enemy.Gems > 1 ? $"{enemy.Hp} {enemy.GetGemHpString()}" : enemy.Hp.ToString();
		<div class="p-2 border-2" style="@($"border-color: {hexColor};")">
			<div class="font-goethe text-xl" style="@($"color: {hexColor};")">@enemy.Name</div>
			<img src='images/wiki/enemies/@(image).png' />
			<div class="grid grid-cols-2">
				<div>HP</div>
				<div>@hpString</div>
				<div>Gems</div>
				<div>@enemy.Gems</div>
				<div>Death type</div>
				<div>@MarkupUtils.DeathString(enemy.Death)</div>
				<div>First appearance</div>
				<div>@Enemies.GetFirstAppearance(enemy.Name)?.ToDisplayString()</div>
				<div>First spawn</div>
				<div>@(enemy.FirstSpawnSecond.HasValue ? new MarkupString(enemy.FirstSpawnSecond.Value.ToString("N4")) : MarkupUtils.NoDataMarkup)</div>
				<div>Spawned by</div>
				<div>
					@if (enemy.SpawnedBy.Length == 0)
					{
						<span>Game</span>
					}
					else
					{
						foreach (Enemy e in enemy.SpawnedBy)
						{
							<span>@MarkupUtils.EnemyString(e)&nbsp;</span>
						}
					}
				</div>
				<div>Behavior</div>
				<div>
					<ul class="pl-4">
						@foreach (string description in @EnemyDescriptions.GetEnemyDescription(enemy))
						{
							<li class="list-disc">@description</li>
						}
					</ul>
				</div>
			</div>
		</div>
	}
</div>

@code
{
	public GameVersion GameVersion { get; set; } = GameConstants.CurrentVersion;

	private void UpdateGameVersion(ChangeEventArgs e)
	{
		string? value = e.Value?.ToString();
		GameVersion = value == null ? GameConstants.CurrentVersion : Enum.Parse<GameVersion>(value);
	}
}
