@page "/wiki/spawns"
@inject PublicApiHttpClient Http
@using DevilDaggersInfo.Core.Spawnset
@using DevilDaggersInfo.Core.Spawnset.View
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Public.Spawnsets
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums

<Heading Title="Spawns" />

<Select @onchange="UpdateGameVersion" class="bg-gray-0b transition-colors duration-100 h-8 py-1 rounded text-color-text">
	<option value=@GameVersion.V1_0>V1</option>
	<option value=@GameVersion.V2_0>V2</option>
	<option value=@GameVersion.V3_0 selected>V3</option>
</Select>
<Paragraph>
	These are all the spawn times for Devil Daggers.
</Paragraph>
<Paragraph>
	Note that Centipedes, Gigapedes, Ghostpedes, and Thorns emerge around 3 seconds later than their actual spawn time.
</Paragraph>

@if (SpawnsView == null)
{
	<Loading />
}
else
{
	<Spawnset SpawnsView=SpawnsView GameVersion=GameVersion />
}

@code
{
	public GameVersion GameVersion { get; set; } = GameVersion.V3_0;

	public SpawnsView? SpawnsView { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await Fetch();
	}

	private async Task Fetch()
	{
		byte[] spawnsetBytes = await Http.GetDefaultSpawnset(GameVersion);

		if (!SpawnsetBinary.TryParse(spawnsetBytes, out SpawnsetBinary? spawnset))
		{
			// TODO: Log error.
			return;
		}

		SpawnsView = new(spawnset, GameVersion);
	}

	private async Task UpdateGameVersion(ChangeEventArgs e)
	{
		SpawnsView = null;

		string? value = e.Value?.ToString();
		GameVersion = value == null ? GameVersion.V3_0 : Enum.Parse<GameVersion>(value);

		await Fetch();
	}
}
