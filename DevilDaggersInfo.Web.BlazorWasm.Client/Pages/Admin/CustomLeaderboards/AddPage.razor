@page "/admin/custom-leaderboards/add"
@inherits BaseAdminPage
@using DevilDaggersInfo.Web.BlazorWasm.Client.Components.Admin
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Admin.CustomLeaderboards
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Admin.Spawnsets
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums

<AdminAdd Name="Custom Leaderboard" OverviewUrl="/admin/custom-leaderboards" ApiCall="Http.AddCustomLeaderboard" Model="_addCustomLeaderboard" @ref="_addComponent">
	<AdminInput Label="Spawnset"><SearchDropdown TKey=int Values="@_spawnsetNames" Converter="s => int.Parse(s)" @bind-Value="@_addCustomLeaderboard.SpawnsetId" /></AdminInput>
	<AdminInput Label="Category"><SearchDropdown TKey=CustomLeaderboardCategory Values="@(Enum.GetValues<CustomLeaderboardCategory>().ToDictionary(e => e, e => e.ToString()))" Converter="s => Enum.Parse<CustomLeaderboardCategory>(s)" ShowDisplayValue=false @bind-Value="@_addCustomLeaderboard.Category" /></AdminInput>
	<AdminInput Label="Featured"><InputCheckbox @bind-Value="@_addCustomLeaderboard.IsFeatured" /></AdminInput>
	@if (_addCustomLeaderboard.IsFeatured)
	{
		<AdminInput Label="Bronze"><InputNumber class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="_addCustomLeaderboard.Daggers.Bronze" /></AdminInput>
		<AdminInput Label="Silver"><InputNumber class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="_addCustomLeaderboard.Daggers.Silver" /></AdminInput>
		<AdminInput Label="Golden"><InputNumber class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="_addCustomLeaderboard.Daggers.Golden" /></AdminInput>
		<AdminInput Label="Devil"><InputNumber class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="_addCustomLeaderboard.Daggers.Devil" /></AdminInput>
		<AdminInput Label="Leviathan"><InputNumber class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="_addCustomLeaderboard.Daggers.Leviathan" /></AdminInput>
	}
</AdminAdd>

@code
{
	private Dictionary<int, string>? _spawnsetNames;
	private AddCustomLeaderboard _addCustomLeaderboard = new();
	private AdminAdd<AddCustomLeaderboard> _addComponent = null!;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			List<GetSpawnsetName> getSpawnsetNames = await Http.GetSpawnsetNames();
			_spawnsetNames = getSpawnsetNames.ToDictionary(m => m.Id, m => m.Name);

			_addComponent.State = ErrorState.None;
		}
		catch (HttpRequestException ex)
		{
			if (ex.StatusCode.HasValue)
				_addComponent.ErrorMessage = $"Error {(int)ex.StatusCode}: {ex.StatusCode}";
			else
				_addComponent.ErrorMessage = "An error occurred while sending the request.";

			_addComponent.State = ErrorState.FatalError;
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}
}
