@page "/admin/mods/add"
@inherits BaseAdminModPage
@using DevilDaggersInfo.Core.Mod.Utils
@using DevilDaggersInfo.Web.BlazorWasm.Client.Components.Admin
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Admin.Mods
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Admin.Players
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums

<AdminAdd Name="Mod" OverviewUrl="/admin/mods" ApiCall="Http.AddMod" Model="_addMod" @ref="_addComponent">
	<AdminInput Label="@nameof(AddMod.Name)"><InputText class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="@_addMod.Name" /></AdminInput>
	<AdminInput Label="@nameof(AddMod.PlayerIds)"><MultiSearchDropdown Values="@_playerNames" @bind-Value="@_addMod.PlayerIds" /></AdminInput>
	<AdminInput Label="@nameof(AddMod.TrailerUrl)"><InputText class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="_addMod.TrailerUrl" /></AdminInput>
	<AdminInput Label="@nameof(AddMod.HtmlDescription)"><InputText class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="@_addMod.HtmlDescription" /></AdminInput>
	<AdminInput Label="@nameof(AddMod.ModTypes)"><MultiSearchDropdown Values="@ModTypes" @bind-Value="@_addMod.ModTypes" /></AdminInput>
	<AdminInput Label="@nameof(AddMod.Url)"><InputText class="w-64 pl-2 bg-gray-1 text-color-text" @bind-Value="@_addMod.Url" /></AdminInput>
	<AdminInput Label="@nameof(AddMod.IsHidden)"><InputCheckbox @bind-Value="@_addMod.IsHidden" /></AdminInput>
	<AdminInput Label="@nameof(AddMod.Binaries)"><InputFile OnChange="LoadBinaries" multiple /></AdminInput>
	<AdminInput Label="@nameof(AddMod.Screenshots)"><InputFile OnChange="LoadScreenshots" multiple /></AdminInput>
</AdminAdd>

@if (_addMod.Binaries.Count > 0 || _binaryFileSizeErrors.Count > 0)
{
	<p class="text-red">Binaries to upload</p>
	<ul class="pl-4">
		@foreach (string binaryName in _addMod.Binaries.Select(kvp => kvp.Key))
		{
			<li class="list-disc">@binaryName (will be renamed to @(BinaryFileNameUtils.SanitizeModBinaryFileName(binaryName, _addMod.Name)))</li>
		}
		@foreach (string fileSizeError in _binaryFileSizeErrors)
		{
			<li class="list-disc text-red">@fileSizeError</li>
		}
	</ul>
}
@if (_addMod.Screenshots.Count > 0 || _screenshotFileSizeErrors.Count > 0)
{
	<p class="text-red">Screenshots to upload</p>
	<ul class="pl-4">
		@{
			int i = 0;
			foreach (string screenshot in _addMod.Screenshots.OrderBy(kvp => kvp.Key).Select(kvp => kvp.Key))
			{
				<li class="list-disc">@screenshot (will be renamed to @($"{i:00}.png"))</li>
				i++;
			}
			foreach (string fileSizeError in _screenshotFileSizeErrors)
			{
				<li class="list-disc text-red">@fileSizeError</li>
			}
		}
	</ul>
}
