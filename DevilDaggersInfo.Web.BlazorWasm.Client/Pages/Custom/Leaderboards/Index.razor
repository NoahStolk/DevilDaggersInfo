@page "/custom/leaderboards"
@implements IHasNavigation
@inject PublicApiHttpClient Http
@inject NavigationManager NavigationManager
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Public.CustomLeaderboards
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums.Sortings.Public
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums

<Heading Title="Custom Leaderboards" />

@if (GetCustomLeaderboards == null)
{
	<Loading />
}
else
{
	<div class="bg-gray-1 p-2 text-lg">
		<div class="grid gap-2 grid-cols-2 max-w-md mb-2">
			<span>Spawnset name</span>
			<input class="bg-black border-gray-3 border-2" value="@SpawnsetFilter" @onchange="ChangeInputSpawnsetName" />
			<span>Author name</span>
			<input class="bg-black border-gray-3 border-2" value="@AuthorFilter" @onchange="ChangeInputAuthorName" />
			<span>Category</span>
			<Select @onchange="ChangeCategory" class="bg-gray-3 transition-colors duration-100 h-8 rounded text-color-text">
				@foreach (CustomLeaderboardCategory e in (CustomLeaderboardCategory[])Enum.GetValues(typeof(CustomLeaderboardCategory)))
				{
					<option value="@e">@e</option>
				}
			</Select>
		</div>

		<CascadingValue Value="this">
			<Paging />
		</CascadingValue>
	</div>

	@if (GetCustomLeaderboards.Results.Count > 0)
	{
		<div class="grid gap-3 sm:grid-cols-custom-leaderboards-sm md:grid-cols-custom-leaderboards-md lg:grid-cols-custom-leaderboards-lg xl:grid-cols-custom-leaderboards-xl 2xl:grid-cols-custom-leaderboards-2xl">
			<div><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.SpawnsetName)">Name</a></div>
			<div class="hidden md:block"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.AuthorName)">Author</a></div>
			<div class="hidden md:block"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.DateCreated)">Created</a></div>
			<div class="hidden md:block"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.DateLastPlayed)">Last played</a></div>
			<div class="hidden 2xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.Submits)">Submits</a></div>
			<div class="hidden 2xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.Players)">Players</a></div>
			<div class="hidden xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.TimeBronze)">Bronze</a></div>
			<div class="hidden xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.TimeSilver)">Silver</a></div>
			<div class="hidden xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.TimeGolden)">Golden</a></div>
			<div class="hidden xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.TimeDevil)">Devil</a></div>
			<div class="hidden xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.TimeLeviathan)">Leviathan</a></div>
			<div class="hidden lg:block"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.TopPlayer)">Top player</a></div>
			<div class="hidden lg:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(CustomLeaderboardSorting.WorldRecord)">WR</a></div>
		</div>
		@for (int i = 0; i < GetCustomLeaderboards.Results.Count; i++)
		{
			GetCustomLeaderboardOverview customLeaderboard = GetCustomLeaderboards.Results[i];
			<div class="grid gap-3 sm:grid-cols-custom-leaderboards-sm md:grid-cols-custom-leaderboards-md lg:grid-cols-custom-leaderboards-lg xl:grid-cols-custom-leaderboards-xl 2xl:grid-cols-custom-leaderboards-2xl h-6 @(i % 2 == 0 ? "bg-gray-1" : string.Empty)">
				<div class="overflow-hidden text-left"><a class="link" href="/custom/leaderboard/@customLeaderboard.Id">@customLeaderboard.SpawnsetName.ToNoBreakString()</a></div>
				<div class="overflow-hidden text-left hidden md:block">@customLeaderboard.SpawnsetAuthorName.ToNoBreakString()</div>
				<div class="overflow-hidden text-left hidden md:block">@customLeaderboard.DateCreated.ToString(FormatUtils.DateFormat)</div>
				<div class="overflow-hidden text-left hidden md:block">@FormatUtils.FormatDateTimeAsTimeAgo(customLeaderboard.DateLastPlayed)</div>
				<div class="overflow-hidden text-right hidden 2xl:block">@(customLeaderboard.DateCreated < FeatureConstants.TrackingCustomLeaderboardSubmitCounts ? "+" : string.Empty)@customLeaderboard.SubmitCount</div>
				<div class="overflow-hidden text-right hidden 2xl:block">@customLeaderboard.PlayerCount</div>
				<div class="overflow-hidden text-right hidden xl:block text-xl font-goethe bronze">@customLeaderboard.TimeBronze.ToString(FormatUtils.TimeFormat)</div>
				<div class="overflow-hidden text-right hidden xl:block text-xl font-goethe silver">@customLeaderboard.TimeSilver.ToString(FormatUtils.TimeFormat)</div>
				<div class="overflow-hidden text-right hidden xl:block text-xl font-goethe golden">@customLeaderboard.TimeGolden.ToString(FormatUtils.TimeFormat)</div>
				<div class="overflow-hidden text-right hidden xl:block text-xl font-goethe devil">@customLeaderboard.TimeDevil.ToString(FormatUtils.TimeFormat)</div>
				<div class="overflow-hidden text-right hidden xl:block text-xl font-goethe leviathan">@customLeaderboard.TimeLeviathan.ToString(FormatUtils.TimeFormat)</div>
				<div class="overflow-hidden text-left hidden lg:block">@customLeaderboard.TopPlayer.ToNoBreakString()</div>
				<div class="overflow-hidden text-right hidden lg:block text-xl font-goethe @(customLeaderboard.WorldRecordDagger.ToString().ToLower())">@customLeaderboard.WorldRecord?.ToString(FormatUtils.TimeFormat)</div>
			</div>
		}
	}
}

@if (GetTotalCustomLeaderboardData != null)
{
	<div class="grid gap-2 grid-cols-1 md:grid-cols-2 mt-4">
		<div class="leviathan text-4xl text-center font-goethe">@GetTotalCustomLeaderboardData.LeaderboardsPerCategory.Values.Sum().ToString("N0") LEADERBOARDS</div>
		<div class="leviathan text-4xl text-center font-goethe">@GetTotalCustomLeaderboardData.PlayersPerCategory.Values.Sum().ToString("N0") PLAYERS</div>
		<div class="leviathan text-4xl text-center font-goethe">@GetTotalCustomLeaderboardData.ScoresPerCategory.Values.Sum().ToString("N0") SCORES</div>
		<div class="leviathan text-4xl text-center font-goethe">@GetTotalCustomLeaderboardData.SubmitsPerCategory.Values.Sum().ToString("N0") SUBMISSIONS*</div>
	</div>

	<div class="grid gap-2 grid-cols-1 md:grid-cols-2 lg:grid-cols-5">
		@foreach (CustomLeaderboardCategory category in Enum.GetValues<CustomLeaderboardCategory>())
		{
			<div>
				<Heading Title="@category.ToString()" Level="3" />
				<p>@GetTotalCustomLeaderboardData.LeaderboardsPerCategory[category].ToString("N0") leaderboards</p>
				<p>@GetTotalCustomLeaderboardData.PlayersPerCategory[category].ToString("N0") players</p>
				<p>@GetTotalCustomLeaderboardData.ScoresPerCategory[category].ToString("N0") scores</p>
				<p>@GetTotalCustomLeaderboardData.SubmitsPerCategory[category].ToString("N0") submissions*</p>
			</div>
		}
	</div>

	<i class="inline-block mt-3">* Submissions are counted since @FeatureConstants.TrackingCustomLeaderboardSubmitCounts.ToString(FormatUtils.DateFormat).</i>
}
