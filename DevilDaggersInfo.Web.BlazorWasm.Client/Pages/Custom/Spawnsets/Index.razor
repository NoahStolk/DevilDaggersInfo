@page "/custom/spawnsets"
@implements IHasNavigation
@inject PublicApiHttpClient Http
@inject NavigationManager NavigationManager
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Public.Spawnsets
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums.Sortings.Public
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums

<Heading Title="Spawnsets" />

@if (GetSpawnsets == null)
{
	<Loading />
}
else
{
	<div class="bg-gray-1 p-2 text-lg">
		<div class="grid gap-2 grid-cols-2 max-w-md mb-2">
			<span>Spawnset name</span>
			<input class="bg-black border-gray-3 border-2" value="@SpawnsetFilter" @onchange="ChangeInputSpawnsetName" />
			<span>Author name</span>
			<input class="bg-black border-gray-3 border-2" value="@AuthorFilter" @onchange="ChangeInputAuthorName" />
			<span>Practice only</span>
			<input type="checkbox" class="bg-black border-gray-3 border-2 w-8" value="@PracticeOnly" @onchange="ChangeInputPracticeOnly" />
			<span>With leaderboard only</span>
			<input type="checkbox" class="bg-black border-gray-3 border-2 w-8" value="@WithCustomLeaderboardOnly" @onchange="ChangeInputWithCustomLeaderboardOnly" />
		</div>

		<CascadingValue Value="this">
			<Paging />
		</CascadingValue>
	</div>

	@if (GetSpawnsets.Results.Count > 0)
	{
		<div class="grid gap-3 sm:grid-cols-spawnsets-sm md:grid-cols-spawnsets-md lg:grid-cols-spawnsets-lg xl:grid-cols-spawnsets-xl">
			<a href="" @onclick:preventDefault class="link text-left" @onclick="() => Sort(SpawnsetSorting.Name)">Name</a>
			<a href="" @onclick:preventDefault class="link text-left hidden md:block" @onclick="() => Sort(SpawnsetSorting.AuthorName)">Author</a>
			<a href="" @onclick:preventDefault class="link text-left hidden md:block" @onclick="() => Sort(SpawnsetSorting.LastUpdated)">Created</a>
			<a href="" @onclick:preventDefault class="link text-left hidden md:block" @onclick="() => Sort(SpawnsetSorting.GameVersion)">Game version</a>
			<a href="" @onclick:preventDefault class="link text-right hidden xl:block" @onclick="() => Sort(SpawnsetSorting.GameMode)">Game mode</a>
			<a href="" @onclick:preventDefault class="link text-right hidden xl:block" @onclick="() => Sort(SpawnsetSorting.LoopLength)">Loop length</a>
			<a href="" @onclick:preventDefault class="link text-right hidden xl:block" @onclick="() => Sort(SpawnsetSorting.LoopSpawnCount)">Loop spawns</a>
			<a href="" @onclick:preventDefault class="link text-right hidden xl:block" @onclick="() => Sort(SpawnsetSorting.PreLoopLength)">Pre-loop length</a>
			<a href="" @onclick:preventDefault class="link text-right hidden xl:block" @onclick="() => Sort(SpawnsetSorting.PreLoopSpawnCount)">Pre-loop spawns</a>
			<a href="" @onclick:preventDefault class="link text-left hidden lg:block" @onclick="() => Sort(SpawnsetSorting.Hand)">Hand</a>
			<a href="" @onclick:preventDefault class="link text-right hidden lg:block" @onclick="() => Sort(SpawnsetSorting.AdditionalGems)">Gems</a>
			<a href="" @onclick:preventDefault class="link text-right hidden lg:block" @onclick="() => Sort(SpawnsetSorting.TimerStart)">Timer</a>
		</div>

		for (int i = 0; i < GetSpawnsets.Results.Count; i++)
		{
			GetSpawnsetOverview spawnset = GetSpawnsets.Results[i];
			<div class="grid gap-3 sm:grid-cols-spawnsets-sm md:grid-cols-spawnsets-md lg:grid-cols-spawnsets-lg xl:grid-cols-spawnsets-xl h-6 @(i % 2 == 0 ? "bg-gray-1" : string.Empty)">
				<div class="overflow-x-hidden text-left"><a class="link" href="/custom/spawnset/@spawnset.Id">@spawnset.Name.ToNoBreakString()</a></div>
				<div class="overflow-x-hidden text-left hidden md:block">@spawnset.AuthorName.ToNoBreakString()</div>
				<div class="overflow-x-hidden text-left hidden md:block">@spawnset.LastUpdated.ToString(FormatUtils.DateFormat)</div>
				<div class="overflow-x-hidden text-left hidden md:block">@spawnset.GameVersion</div>
				<div class="overflow-x-hidden text-right hidden xl:block">@spawnset.GameMode</div>
				<div class="overflow-x-hidden text-right hidden xl:block">@(spawnset.LoopLength.HasValue ? (MarkupString)spawnset.LoopLength.Value.ToString(FormatUtils.TimeFormat) : MarkupUtils.NoDataMarkup)</div>
				<div class="overflow-x-hidden text-right hidden xl:block">@spawnset.LoopSpawnCount</div>
				<div class="overflow-x-hidden text-right hidden xl:block">@(spawnset.PreLoopLength.HasValue ? (MarkupString)spawnset.PreLoopLength.Value.ToString(FormatUtils.TimeFormat) : MarkupUtils.NoDataMarkup)</div>
				<div class="overflow-x-hidden text-right hidden xl:block">@spawnset.PreLoopSpawnCount</div>
				<div class="overflow-x-hidden text-left hidden lg:block">Level @((byte)spawnset.Hand)</div>
				<div class="overflow-x-hidden text-right hidden lg:block">@spawnset.AdditionalGems</div>
				<div class="overflow-x-hidden text-right hidden lg:block">@spawnset.TimerStart.ToString(FormatUtils.TimeFormat)</div>
			</div>
		}
	}
}
