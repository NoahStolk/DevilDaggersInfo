@page "/custom/spawnset/{Id:int}"
@inject PublicApiHttpClient Http
@inject NavigationManager NavigationManager
@using DevilDaggersInfo.Core.Spawnset
@using DevilDaggersInfo.Core.Spawnset.View
@using DevilDaggersInfo.Core.Wiki.Enums
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Dto.Public.Spawnsets
@using DevilDaggersInfo.Web.BlazorWasm.Shared.Enums

@if (GetSpawnset == null)
{
	<Loading />
}
else if (SpawnsView == null)
{
	<div>Spawnset could not be parsed.</div>
}
else
{
	<Heading>Spawnset - @GetSpawnset.Name</Heading>

	<Spawnset SpawnsView=SpawnsView />
}

@code
{
	[Parameter, EditorRequired] public int Id { get; set; }

	public GetSpawnset? GetSpawnset { get; set; }

	public SpawnsView? SpawnsView { get; set; }

	protected override async Task OnInitializedAsync()
	{
		GetSpawnset = await Http.GetSpawnsetById(Id);

		if (!SpawnsetBinary.TryParse(GetSpawnset.FileBytes, out SpawnsetBinary? spawnset))
		{
			// TODO: Log error.
			return;
		}

		SpawnsView = new(spawnset, GameVersion.V3_1);
	}
}
