<li class="pl-3 py-1 whitespace-nowrap overflow-x-hidden text-xl cursor-pointer select-none transition-all sm:hover:bg-dark-red" @onmouseleave="@OnMouseOut" @onmouseenter="@OnMouseOver">
	<div>
		<NavIcon Type="@IconType" Text="@Text" />
		<span class="hidden sm:inline-block">
			&gt;
		</span>
		<ul class="@(ShowList ? "relative" : "hidden") sm:block sm:absolute @GetOpacityClass() @GetPointerEventsClass() transition-all duration-150 ease-in-out p-2 ml-0 sm:ml-[180px] mt-0 sm:-mt-9 sm:border-2 sm:border-dark-red bg-black">
			@ChildContent
		</ul>
	</div>
</li>

@code
{
	private bool _showList;
	public bool ShowList
	{
		get => _showList;
		set
		{
			_showList = value;
			StateHasChanged();
		}
	}

	[CascadingParameter] public NavMenu NavMenu { get; set; } = null!;

	[Parameter, EditorRequired] public RenderFragment ChildContent { get; set; } = null!;
	[Parameter, EditorRequired] public string Text { get; set; } = null!;
	[Parameter, EditorRequired] public string IconType { get; set; } = null!;

	protected override void OnInitialized()
	{
		NavMenu.NavDropdowns.Add(this);
	}

	private void OnMouseOver(MouseEventArgs mouseEvent)
	{
		NavMenu.ShowSubMenu(this);
	}

	private void OnMouseOut(MouseEventArgs mouseEvent)
	{
		ShowList = false;
	}

	private string? GetOpacityClass()
	{
		if (!ShowList)
			return "opacity-0";

		return NavMenu.GetOpacityClass();
	}

	private string GetPointerEventsClass()
	{
		return ShowList ? "pointer-events-auto" : "pointer-events-none";
	}
}
