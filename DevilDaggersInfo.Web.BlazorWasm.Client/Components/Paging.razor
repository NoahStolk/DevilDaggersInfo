@using DevilDaggersInfo.Web.BlazorWasm.Client.Components.Input
@using DevilDaggersInfo.Web.BlazorWasm.Client.Pages

@{
	bool f = Component.PageIndex <= 0;
	bool l = Component.PageIndex >= Component.TotalPages - 1;
	const string disabledStyle = "disabled:opacity-50 cursor-default btn-disabled";
	const string enabledStyle = "btn-gray-light";
}
<button disabled="@f" class="@(f ? disabledStyle : enabledStyle) btn w-10 h-10 mx-1" @onclick="() => Component.ChangePageIndex(0)">@MarkupUtils.NavStart</button>
<button disabled="@f" class="@(f ? disabledStyle : enabledStyle) btn w-10 h-10 mx-1" @onclick="() => Component.ChangePageIndex(Component.PageIndex - 1)">@MarkupUtils.NavPrev</button>
<button disabled="@l" class="@(l ? disabledStyle : enabledStyle) btn w-10 h-10 mx-1" @onclick="() => Component.ChangePageIndex(Component.PageIndex + 1)">@MarkupUtils.NavNext</button>
<button disabled="@l" class="@(l ? disabledStyle : enabledStyle) btn w-10 h-10 mx-1" @onclick="() => Component.ChangePageIndex(Component.TotalPages - 1)">@MarkupUtils.NavEnd</button>

<SelectList CssClass="relative bottom-[14px]" TValue="int" Values="@(PagingConstants.PageSizeOptions.ToList())" DisplayFunction="@(i => i.ToString())" Default="PageSize" Selected="@(i => Component.ChangePageSize(new ChangeEventArgs() { Value = i }))" />
@if (Component.TotalResults == 0)
{
	<p class="pt-2">Search returned no results.</p>
}
else
{
	<p class="p-1">Page @(Component.PageIndex + 1) of @Component.TotalPages (@(Component.PageIndex * Component.PageSize + 1) - @Math.Min(Component.TotalResults, (Component.PageIndex + 1) * Component.PageSize) of @Component.TotalResults)</p>
}

@code
{
	[CascadingParameter]
	public IHasNavigation Component { get; set; } = null!;

	[Parameter]
	public int PageSize { get; set; } = PagingConstants.PageSizeDefault;
}
